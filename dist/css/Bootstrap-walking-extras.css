/*!
 * Bootstrap-walking-extras v1.0.0
 * Copyright 2013-2014 Mattias Bohez
 */

/* ==========================================================================
   Block grids
   ========================================================================== */
/**
 * Block grids give you a way to evenly split its child elements within x columns.
 *
 * inspired on http://foundation.zurb.com/docs/components/block_grid.html
 *
 * grid-<breakpoint>-<columns>
 *
 * breakpoint:
 * xs = small spartphones
 * sm = tablets
 * md = small desktop
 * lg = large desktop
 *
 * columns:
 * 1-12 = number of columns
 *
 * Example HTML:
 *
 * <div class="grid-<breakpoint>-<columns>">
 *     <div class="cell">...</div>
 *     <div class="cell">...</div>
 *	   ...
 * </div>
 */
.grid-xs-1 > .cell,
.grid-xs-2 > .cell,
.grid-xs-3 > .cell,
.grid-xs-4 > .cell,
.grid-xs-5 > .cell,
.grid-xs-6 > .cell,
.grid-xs-7 > .cell,
.grid-xs-8 > .cell,
.grid-xs-9 > .cell,
.grid-xs-10 > .cell,
.grid-xs-11 > .cell,
.grid-xs-12 > .cell,
.grid-sm-1 > .cell,
.grid-sm-2 > .cell,
.grid-sm-3 > .cell,
.grid-sm-4 > .cell,
.grid-sm-5 > .cell,
.grid-sm-6 > .cell,
.grid-sm-7 > .cell,
.grid-sm-8 > .cell,
.grid-sm-9 > .cell,
.grid-sm-10 > .cell,
.grid-sm-11 > .cell,
.grid-sm-12 > .cell,
.grid-md-1 > .cell,
.grid-md-2 > .cell,
.grid-md-3 > .cell,
.grid-md-4 > .cell,
.grid-md-5 > .cell,
.grid-md-6 > .cell,
.grid-md-7 > .cell,
.grid-md-8 > .cell,
.grid-md-9 > .cell,
.grid-md-10 > .cell,
.grid-md-11 > .cell,
.grid-md-12 > .cell,
.grid-lg-1 > .cell,
.grid-lg-2 > .cell,
.grid-lg-3 > .cell,
.grid-lg-4 > .cell,
.grid-lg-5 > .cell,
.grid-lg-6 > .cell,
.grid-lg-7 > .cell,
.grid-lg-8 > .cell,
.grid-lg-9 > .cell,
.grid-lg-10 > .cell,
.grid-lg-11 > .cell,
.grid-lg-12 > .cell {
  position: relative;
  min-height: 1px;
  padding-left: 15px;
  padding-right: 15px;
}
.grid-xs-2 > .cell,
.grid-xs-3 > .cell,
.grid-xs-4 > .cell,
.grid-xs-5 > .cell,
.grid-xs-6 > .cell,
.grid-xs-7 > .cell,
.grid-xs-8 > .cell,
.grid-xs-9 > .cell,
.grid-xs-10 > .cell,
.grid-xs-11 > .cell,
.grid-xs-12 > .cell {
  float: left;
}
.grid-xs-1 > .cell {
  width: 100%;
}
.grid-xs-1 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-1 > .cell:nth-of-type(1n+1) {
  clear: both;
}
.grid-xs-2 > .cell {
  width: 50%;
}
.grid-xs-2 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-2 > .cell:nth-of-type(2n+1) {
  clear: both;
}
.grid-xs-3 > .cell {
  width: 33.33333333%;
}
.grid-xs-3 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-3 > .cell:nth-of-type(3n+1) {
  clear: both;
}
.grid-xs-4 > .cell {
  width: 25%;
}
.grid-xs-4 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-4 > .cell:nth-of-type(4n+1) {
  clear: both;
}
.grid-xs-5 > .cell {
  width: 20%;
}
.grid-xs-5 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-5 > .cell:nth-of-type(5n+1) {
  clear: both;
}
.grid-xs-6 > .cell {
  width: 16.66666667%;
}
.grid-xs-6 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-6 > .cell:nth-of-type(6n+1) {
  clear: both;
}
.grid-xs-7 > .cell {
  width: 14.28571429%;
}
.grid-xs-7 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-7 > .cell:nth-of-type(7n+1) {
  clear: both;
}
.grid-xs-8 > .cell {
  width: 12.5%;
}
.grid-xs-8 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-8 > .cell:nth-of-type(8n+1) {
  clear: both;
}
.grid-xs-9 > .cell {
  width: 11.11111111%;
}
.grid-xs-9 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-9 > .cell:nth-of-type(9n+1) {
  clear: both;
}
.grid-xs-10 > .cell {
  width: 10%;
}
.grid-xs-10 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-10 > .cell:nth-of-type(10n+1) {
  clear: both;
}
.grid-xs-11 > .cell {
  width: 9.09090909%;
}
.grid-xs-11 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-11 > .cell:nth-of-type(11n+1) {
  clear: both;
}
.grid-xs-12 > .cell {
  width: 8.33333333%;
}
.grid-xs-12 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-12 > .cell:nth-of-type(12n+1) {
  clear: both;
}
@media (min-width: 768px) {
  .grid-sm-2 > .cell,
  .grid-sm-3 > .cell,
  .grid-sm-4 > .cell,
  .grid-sm-5 > .cell,
  .grid-sm-6 > .cell,
  .grid-sm-7 > .cell,
  .grid-sm-8 > .cell,
  .grid-sm-9 > .cell,
  .grid-sm-10 > .cell,
  .grid-sm-11 > .cell,
  .grid-sm-12 > .cell {
    float: left;
  }
  .grid-sm-1 > .cell {
    width: 100%;
  }
  .grid-sm-1 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-1 > .cell:nth-of-type(1n+1) {
    clear: both;
  }
  .grid-sm-2 > .cell {
    width: 50%;
  }
  .grid-sm-2 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-2 > .cell:nth-of-type(2n+1) {
    clear: both;
  }
  .grid-sm-3 > .cell {
    width: 33.33333333%;
  }
  .grid-sm-3 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-3 > .cell:nth-of-type(3n+1) {
    clear: both;
  }
  .grid-sm-4 > .cell {
    width: 25%;
  }
  .grid-sm-4 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-4 > .cell:nth-of-type(4n+1) {
    clear: both;
  }
  .grid-sm-5 > .cell {
    width: 20%;
  }
  .grid-sm-5 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-5 > .cell:nth-of-type(5n+1) {
    clear: both;
  }
  .grid-sm-6 > .cell {
    width: 16.66666667%;
  }
  .grid-sm-6 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-6 > .cell:nth-of-type(6n+1) {
    clear: both;
  }
  .grid-sm-7 > .cell {
    width: 14.28571429%;
  }
  .grid-sm-7 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-7 > .cell:nth-of-type(7n+1) {
    clear: both;
  }
  .grid-sm-8 > .cell {
    width: 12.5%;
  }
  .grid-sm-8 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-8 > .cell:nth-of-type(8n+1) {
    clear: both;
  }
  .grid-sm-9 > .cell {
    width: 11.11111111%;
  }
  .grid-sm-9 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-9 > .cell:nth-of-type(9n+1) {
    clear: both;
  }
  .grid-sm-10 > .cell {
    width: 10%;
  }
  .grid-sm-10 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-10 > .cell:nth-of-type(10n+1) {
    clear: both;
  }
  .grid-sm-11 > .cell {
    width: 9.09090909%;
  }
  .grid-sm-11 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-11 > .cell:nth-of-type(11n+1) {
    clear: both;
  }
  .grid-sm-12 > .cell {
    width: 8.33333333%;
  }
  .grid-sm-12 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-12 > .cell:nth-of-type(12n+1) {
    clear: both;
  }
}
@media (min-width: 992px) {
  .grid-md-2 > .cell,
  .grid-md-3 > .cell,
  .grid-md-4 > .cell,
  .grid-md-5 > .cell,
  .grid-md-6 > .cell,
  .grid-md-7 > .cell,
  .grid-md-8 > .cell,
  .grid-md-9 > .cell,
  .grid-md-10 > .cell,
  .grid-md-11 > .cell,
  .grid-md-12 > .cell {
    float: left;
  }
  .grid-md-1 > .cell {
    width: 100%;
  }
  .grid-md-1 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-1 > .cell:nth-of-type(1n+1) {
    clear: both;
  }
  .grid-md-2 > .cell {
    width: 50%;
  }
  .grid-md-2 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-2 > .cell:nth-of-type(2n+1) {
    clear: both;
  }
  .grid-md-3 > .cell {
    width: 33.33333333%;
  }
  .grid-md-3 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-3 > .cell:nth-of-type(3n+1) {
    clear: both;
  }
  .grid-md-4 > .cell {
    width: 25%;
  }
  .grid-md-4 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-4 > .cell:nth-of-type(4n+1) {
    clear: both;
  }
  .grid-md-5 > .cell {
    width: 20%;
  }
  .grid-md-5 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-5 > .cell:nth-of-type(5n+1) {
    clear: both;
  }
  .grid-md-6 > .cell {
    width: 16.66666667%;
  }
  .grid-md-6 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-6 > .cell:nth-of-type(6n+1) {
    clear: both;
  }
  .grid-md-7 > .cell {
    width: 14.28571429%;
  }
  .grid-md-7 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-7 > .cell:nth-of-type(7n+1) {
    clear: both;
  }
  .grid-md-8 > .cell {
    width: 12.5%;
  }
  .grid-md-8 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-8 > .cell:nth-of-type(8n+1) {
    clear: both;
  }
  .grid-md-9 > .cell {
    width: 11.11111111%;
  }
  .grid-md-9 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-9 > .cell:nth-of-type(9n+1) {
    clear: both;
  }
  .grid-md-10 > .cell {
    width: 10%;
  }
  .grid-md-10 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-10 > .cell:nth-of-type(10n+1) {
    clear: both;
  }
  .grid-md-11 > .cell {
    width: 9.09090909%;
  }
  .grid-md-11 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-11 > .cell:nth-of-type(11n+1) {
    clear: both;
  }
  .grid-md-12 > .cell {
    width: 8.33333333%;
  }
  .grid-md-12 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-12 > .cell:nth-of-type(12n+1) {
    clear: both;
  }
}
@media (min-width: 1200px) {
  .grid-lg-2 > .cell,
  .grid-lg-3 > .cell,
  .grid-lg-4 > .cell,
  .grid-lg-5 > .cell,
  .grid-lg-6 > .cell,
  .grid-lg-7 > .cell,
  .grid-lg-8 > .cell,
  .grid-lg-9 > .cell,
  .grid-lg-10 > .cell,
  .grid-lg-11 > .cell,
  .grid-lg-12 > .cell {
    float: left;
  }
  .grid-lg-1 > .cell {
    width: 100%;
  }
  .grid-lg-1 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-1 > .cell:nth-of-type(1n+1) {
    clear: both;
  }
  .grid-lg-2 > .cell {
    width: 50%;
  }
  .grid-lg-2 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-2 > .cell:nth-of-type(2n+1) {
    clear: both;
  }
  .grid-lg-3 > .cell {
    width: 33.33333333%;
  }
  .grid-lg-3 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-3 > .cell:nth-of-type(3n+1) {
    clear: both;
  }
  .grid-lg-4 > .cell {
    width: 25%;
  }
  .grid-lg-4 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-4 > .cell:nth-of-type(4n+1) {
    clear: both;
  }
  .grid-lg-5 > .cell {
    width: 20%;
  }
  .grid-lg-5 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-5 > .cell:nth-of-type(5n+1) {
    clear: both;
  }
  .grid-lg-6 > .cell {
    width: 16.66666667%;
  }
  .grid-lg-6 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-6 > .cell:nth-of-type(6n+1) {
    clear: both;
  }
  .grid-lg-7 > .cell {
    width: 14.28571429%;
  }
  .grid-lg-7 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-7 > .cell:nth-of-type(7n+1) {
    clear: both;
  }
  .grid-lg-8 > .cell {
    width: 12.5%;
  }
  .grid-lg-8 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-8 > .cell:nth-of-type(8n+1) {
    clear: both;
  }
  .grid-lg-9 > .cell {
    width: 11.11111111%;
  }
  .grid-lg-9 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-9 > .cell:nth-of-type(9n+1) {
    clear: both;
  }
  .grid-lg-10 > .cell {
    width: 10%;
  }
  .grid-lg-10 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-10 > .cell:nth-of-type(10n+1) {
    clear: both;
  }
  .grid-lg-11 > .cell {
    width: 9.09090909%;
  }
  .grid-lg-11 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-11 > .cell:nth-of-type(11n+1) {
    clear: both;
  }
  .grid-lg-12 > .cell {
    width: 8.33333333%;
  }
  .grid-lg-12 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-12 > .cell:nth-of-type(12n+1) {
    clear: both;
  }
}
/* ==========================================================================
   Flexible media embeds
   ========================================================================== */
/**
 * Flexible media embeds
 *
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * inspired on http://foundation.zurb.com/docs/components/flex_video.html
 *
 * Example HTML:
 *
 * <div class="flex-video flex-video-widescreen">
 *     [iframe|object|embed|img]
 * </div>
 */
.flex-video {
  position: relative;
  padding-top: 0;
  padding-bottom: 75%;
  height: 0;
  margin-bottom: 20px;
  overflow: hidden;
}
.flex-video iframe,
.flex-video object,
.flex-video embed,
.flex-video video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.flex-video-youtube {
  padding-top: 25px;
}
.flex-video-widescreen {
  padding-bottom: 56.25%;
}
/* ==========================================================================
   button with an icon
   ========================================================================== */
/**
 * this class allows you ta align an icon with the text in a btn, the icon will
 * always be aligned in the middle of the text.
 * This code is designed for both the default bootstrap glyphicons and Fontawesome.
 *
 * Example HTML:
 *
 * <div class="btn btn-default btn-iconed">
 *     <i class="glyphicon glyphicon-<type>"></i>
 *     <span>[button text]</span>
 * </div>
 */
.btn-iconed {
  display: inline-table;
  white-space: normal;
  text-align: left;
  background-clip: padding-box;
}
.btn-iconed > span,
.btn-iconed .glyphicon,
.btn-iconed .fa {
  display: table-cell;
  vertical-align: middle;
}
.btn-iconed .glyphicon,
.btn-iconed .fa {
  width: 1.28571429em;
}
.btn-iconed > span + .glyphicon,
.btn-iconed > span + .fa {
  padding-left: .3em;
  padding-right: 0;
  text-align: right;
}
.btn-iconed.btn-block {
  display: table;
  padding-left: 12px;
  padding-right: 12px;
}
.btn-iconed.btn-block.btn-lg {
  padding-left: 16px;
  padding-right: 16px;
}
.btn-iconed.btn-block.btn-sm {
  padding-left: 10px;
  padding-right: 10px;
}
.btn-iconed.btn-block.btn-xs {
  padding-left: 5px;
  padding-right: 5px;
}
/* ==========================================================================
   3D flip panels
   ========================================================================== */
/**
 * This class allows you to create panels that perform a 3D card flip when
 * hovered or when activated by js.
 * !! you must specify a height and a width on the flip panel
 *
 * modifiers:
 * .flip = this extra class flips the box around, can be added by JS to make it flip
 * .hover = adding this class makes the panel flip on :hover.
 *
 * Example HTML:
 *
 * <div class="flip-panel">
 *     <div class="front">[content of the front side]</div>
 *     <div class="back">[content of the back side]</div>
 * </div>
 */
.flip-panel {
  width: 200px;
  height: 200px;
  position: relative;
  display: inline-block;
  -webkit-perspective: 600px;
  -moz-perspective: 600px;
  perspective: 600px;
  /* -- vertical axis rotation -- */
  /* -- diagonal axis rotation -- */
}
.flip-panel > .front {
  float: none;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
  width: inherit;
  height: inherit;
  -webkit-transform: rotateX(0deg) rotateY(0deg);
  -ms-transform: rotateX(0deg) rotateY(0deg);
  transform: rotateX(0deg) rotateY(0deg);
  -webkit-transform-style: preserve-3d;
  -moz-transform-style: preserve-3d;
  -ms-transform-style: preserve-3d;
  transform-style: preserve-3d;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden;
  /* -- transition is the magic sauce for animation -- */
  -webkit-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
}
.flip-panel.flip > .front,
.flip-panel.hover:hover > .front {
  z-index: 10;
  -webkit-transform: rotateY(180deg);
  -ms-transform: rotateY(180deg);
  -o-transform: rotateY(180deg);
  transform: rotateY(180deg);
}
.flip-panel > .back {
  float: none;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 800;
  width: inherit;
  height: inherit;
  -webkit-transform: rotateY(-180deg);
  -ms-transform: rotateY(-180deg);
  -o-transform: rotateY(-180deg);
  transform: rotateY(-180deg);
  -webkit-transform-style: preserve-3d;
  -moz-transform-style: preserve-3d;
  -ms-transform-style: preserve-3d;
  transform-style: preserve-3d;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden;
  /* -- transition is the magic sauce for animation -- */
  -webkit-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
}
.flip-panel.flip > .back,
.flip-panel.hover:hover > .back {
  z-index: 20;
  -webkit-transform: rotateX(0deg) rotateY(0deg);
  -ms-transform: rotateX(0deg) rotateY(0deg);
  transform: rotateX(0deg) rotateY(0deg);
}
.flip-panel.vertical > .front {
  -webkit-transform: rotateX(0deg) rotateY(0deg);
  -ms-transform: rotateX(0deg) rotateY(0deg);
  transform: rotateX(0deg) rotateY(0deg);
}
.flip-panel.vertical.flip > .front,
.flip-panel.vertical.hover:hover > .front {
  -webkit-transform: rotateX(180deg);
  -ms-transform: rotateX(180deg);
  -o-transform: rotateX(180deg);
  transform: rotateX(180deg);
}
.flip-panel.vertical > .back {
  -webkit-transform: rotateX(-180deg);
  -ms-transform: rotateX(-180deg);
  -o-transform: rotateX(-180deg);
  transform: rotateX(-180deg);
}
.flip-panel.vertical.flip > .back,
.flip-panel.vertical.hover:hover > .back {
  -webkit-transform: rotateX(0deg) rotateY(0deg);
  -ms-transform: rotateX(0deg) rotateY(0deg);
  transform: rotateX(0deg) rotateY(0deg);
}
.flip-panel.diagonal > .front {
  -webkit-transform: rotate3d(45, 45, 0, 0deg);
  -moz-transform: rotate3d(45, 45, 0, 0deg);
  -ms-transform: rotate3d(45, 45, 0, 0deg);
  transform: rotate3d(45, 45, 0, 0deg);
}
.flip-panel.diagonal.flip > .front,
.flip-panel.diagonal.hover:hover > .front {
  -webkit-transform: rotate3d(-45, -45, 0, 180deg);
  -moz-transform: rotate3d(-45, -45, 0, 180deg);
  -ms-transform: rotate3d(-45, -45, 0, 180deg);
  transform: rotate3d(-45, -45, 0, 180deg);
}
.flip-panel.diagonal > .back {
  -webkit-transform: rotate3d(45, 45, 0, -180deg);
  -moz-transform: rotate3d(45, 45, 0, -180deg);
  -ms-transform: rotate3d(45, 45, 0, -180deg);
  transform: rotate3d(45, 45, 0, -180deg);
}
.flip-panel.diagonal.flip > .back,
.flip-panel.diagonal.hover:hover > .back {
  -webkit-transform: rotate3d(45, 45, 0, 0deg);
  -moz-transform: rotate3d(45, 45, 0, 0deg);
  -ms-transform: rotate3d(45, 45, 0, 0deg);
  transform: rotate3d(45, 45, 0, 0deg);
}
/* ==========================================================================
   A basic css-only tooltip
   ========================================================================== */
/**
 * To use some basic tooltips using only css, they are very basic
 * so only use them for simple effects
 *
 * Limitations:
 * - only a single line is displayed as a tooltip
 * - the tooltip is always aligned to the left so might go off the screen
 *
 * Example HTML:
 *
 * <a data-tooltip="[tooltip content]">
 *     ...
 * </a>
 */
[data-tooltip] {
  position: relative;
}
[data-tooltip]:after {
  content: attr(data-tooltip);
  position: absolute;
  top: -35px;
  left: -20px;
  padding: 3px 8px;
  color: #ffffff;
  text-align: center;
  text-decoration: none;
  background-color: #000000;
  border-radius: 4px;
  white-space: nowrap;
  visibility: hidden;
  z-index: 1070;
}
[data-tooltip]:before {
  content: "";
  position: absolute;
  top: -9px;
  left: 5px;
  border-top: 5px solid #000000;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  visibility: hidden;
  z-index: 1070;
}
[data-tooltip]:hover:before,
[data-tooltip]:focus:before,
[data-tooltip]:hover:after,
[data-tooltip]:focus:after {
  visibility: visible;
}
[data-tooltip][data-placement=left]:after {
  top: 50%;
  left: auto;
  right: 100%;
  margin-top: -13px;
  margin-right: 9px;
}
[data-tooltip][data-placement=left]:before {
  top: 50%;
  left: auto;
  right: 100%;
  margin-right: 4px;
  border-top: 5px solid transparent;
  border-left: 5px solid #000000;
  border-bottom: 5px solid transparent;
  border-right: none;
  margin-top: -5px;
}
[data-tooltip][data-placement=bottom]:after {
  top: auto;
  bottom: -35px;
  left: -20px;
}
[data-tooltip][data-placement=bottom]:before {
  top: auto;
  bottom: -9px;
  left: 5px;
  border-top: none;
  border-left: 5px solid transparent;
  border-bottom: 5px solid #000000;
  border-right: 5px solid transparent;
}
[data-tooltip][data-placement=right]:after {
  top: 50%;
  left: 100%;
  margin-top: -13px;
  margin-left: 9px;
}
[data-tooltip][data-placement=right]:before {
  top: 50%;
  left: 100%;
  margin-left: 4px;
  border-top: 5px solid transparent;
  border-right: 5px solid #000000;
  border-bottom: 5px solid transparent;
  border-left: none;
  margin-top: -5px;
}
/* ==========================================================================
   overlay
   ========================================================================== */
/**
 * inspired on http://www.getuikit.com/docs/overlay.html
 *
 * Example HTML:
 *
 * <a class="overlay" href="">
 *   <img src="" alt="">
 *   <div class="overlay-area">
 *     <i class="overlay-icon ..."></i>
 *   </div>
 * </a>
 */
.overlay {
  display: inline-block;
  position: relative;
  max-width: 100%;
  vertical-align: middle;
}
.overlay-area {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: #666;
  background: rgba(0, 0, 0, 0.3);
  opacity: 0;
  -webkit-transition: opacity 0.15s linear;
  -o-transition: opacity 0.15s linear;
  transition: opacity 0.15s linear;
  padding: 9px;
  color: #fff;
  color: rgba(255, 255, 255, 0.6);
}
.overlay:hover .overlay-area {
  opacity: 1;
}
.overlay-icon {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -0.5em;
  width: 1.28571429em;
  text-align: center;
  margin-left: -0.64285714em;
  font-size: 4em;
}
/* ==========================================================================
   An aligned row alternative
   ========================================================================== */
/**
 * Modifier for the default bootstrap 3 grid that has its contents aligned
 * this basicaly transforms the normal grid into a "table" with cells
 * each column has an even height
 *
 * This code has limitations:
 *   - all columns must account for 100% of the width (aka 12 columns) no gaps
 *   - no support for push/pull/offset modifier class support
 *   - the columns are displayed as table-cells, they thus behave like tables, 
 *     which can cause unwanted behaviour in some cases.
 *
 * Example HTML:
 *
 * <div class="row row-aligned">
 *     <div class="col-<breakpoint>-<size> col-<breakpoint>-<alignment>">...</div>
 * </div>
 */
.row-aligned {
  display: table;
}
.row-aligned > .col-xs-1,
.row-aligned > .col-xs-2,
.row-aligned > .col-xs-3,
.row-aligned > .col-xs-4,
.row-aligned > .col-xs-5,
.row-aligned > .col-xs-6,
.row-aligned > .col-xs-7,
.row-aligned > .col-xs-8,
.row-aligned > .col-xs-9,
.row-aligned > .col-xs-10,
.row-aligned > .col-xs-11,
.row-aligned > .col-xs-12 {
  display: table-cell;
  float: none;
}
.col-xs-top {
  vertical-align: top;
}
.col-xs-middle {
  vertical-align: middle;
}
.col-xs-bottom {
  vertical-align: bottom;
}
@media (min-width: 768px) {
  .row-aligned > .col-sm-1,
  .row-aligned > .col-sm-2,
  .row-aligned > .col-sm-3,
  .row-aligned > .col-sm-4,
  .row-aligned > .col-sm-5,
  .row-aligned > .col-sm-6,
  .row-aligned > .col-sm-7,
  .row-aligned > .col-sm-8,
  .row-aligned > .col-sm-9,
  .row-aligned > .col-sm-10,
  .row-aligned > .col-sm-11,
  .row-aligned > .col-sm-12 {
    display: table-cell;
    float: none;
  }
  .col-sm-top {
    vertical-align: top;
  }
  .col-sm-middle {
    vertical-align: middle;
  }
  .col-sm-bottom {
    vertical-align: bottom;
  }
}
@media (min-width: 992px) {
  .row-aligned > .col-md-1,
  .row-aligned > .col-md-2,
  .row-aligned > .col-md-3,
  .row-aligned > .col-md-4,
  .row-aligned > .col-md-5,
  .row-aligned > .col-md-6,
  .row-aligned > .col-md-7,
  .row-aligned > .col-md-8,
  .row-aligned > .col-md-9,
  .row-aligned > .col-md-10,
  .row-aligned > .col-md-11,
  .row-aligned > .col-md-12 {
    display: table-cell;
    float: none;
  }
  .col-md-top {
    vertical-align: top;
  }
  .col-md-middle {
    vertical-align: middle;
  }
  .col-md-bottom {
    vertical-align: bottom;
  }
}
@media (min-width: 1200px) {
  .row-aligned > .col-lg-1,
  .row-aligned > .col-lg-2,
  .row-aligned > .col-lg-3,
  .row-aligned > .col-lg-4,
  .row-aligned > .col-lg-5,
  .row-aligned > .col-lg-6,
  .row-aligned > .col-lg-7,
  .row-aligned > .col-lg-8,
  .row-aligned > .col-lg-9,
  .row-aligned > .col-lg-10,
  .row-aligned > .col-lg-11,
  .row-aligned > .col-lg-12 {
    display: table-cell;
    float: none;
  }
  .col-lg-top {
    vertical-align: top;
  }
  .col-lg-middle {
    vertical-align: middle;
  }
  .col-lg-bottom {
    vertical-align: bottom;
  }
}
/* ==========================================================================
   Vertical ruler
   ========================================================================== */
/**
 * This class allows you to add a ruler that is displayed vertically
 * warning: the parent element must be a position relative.
 * note: default BS grid columns are already relative.
 *
 * limitation: when both a left and right ruler are used in adjacent blocks
 *             semi transparent (rgba) can give unwanted effects as 2 lines 
 *             are stacked one atop the other.
 *
 * Example HTML:
 *
 * <hr class="vertical-ruler vertical-ruler-left">
 *
 */
.vertical-ruler {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  border-right: 1px solid #eeeeee;
  height: 100%;
  margin: 0;
}
.vertical-ruler-left {
  right: auto;
  left: -1px;
}
/* ==========================================================================
   Responsive modal
   ========================================================================== */
@media (max-width: 767px) {
  .modal {
    overflow: hidden;
  }
  .modal.fade .modal-dialog {
    -webkit-transform: translate(100%, 0);
    -ms-transform: translate(100%, 0);
    -o-transform: translate(100%, 0);
    transform: translate(100%, 0);
  }
  .modal.in .modal-dialog {
    -webkit-transform: translate(0, 0);
    -ms-transform: translate(0, 0);
    -o-transform: translate(0, 0);
    transform: translate(0, 0);
  }
  .modal-dialog {
    margin: 0 0 0 20px;
    height: 100%;
  }
  .modal-content {
    border-radius: 0;
    height: 100%;
    border: none;
    position: static;
  }
  .modal-body {
    position: relative;
    height: 100%;
    overflow: auto;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
  }
  .modal-footer,
  .modal-header {
    position: absolute;
    width: 100%;
    background-color: #ffffff;
    z-index: 1051;
  }
  .modal-header {
    top: 0;
  }
  .modal-footer {
    bottom: 0;
  }
}
/* ==========================================================================
   Spacing-specific utilities
   ========================================================================== */
/**
 * Used to adjust the default spacing between components
 * Use with great care!
 *
 * <type>-<breakpoint>-<direction>-<size>
 *
 * type:
 * margin
 * padding
 *
 * breakpoint:
 * xs = small spartphones
 * sm = tablets
 * md = small desktop
 * lg = large desktop
 *
 * direction:
 * a = all
 * t = top
 * r = right
 * b = bottom
 * l = left
 * h = horizontal
 * v = vertical

 * direction:
 * n = none
 * s = small
 * m = medium
 * l = large
 * xl = extra-large
 */
/* margins */
.margin-xs-t-n,
.margin-xs-v-n,
.margin-xs-a-n {
  margin-top: 0 !important;
}
.margin-xs-t-s,
.margin-xs-v-s,
.margin-xs-a-s {
  margin-top: 15px !important;
}
.margin-xs-t-m,
.margin-xs-v-m,
.margin-xs-a-m {
  margin-top: 30px !important;
}
.margin-xs-t-l,
.margin-xs-v-l,
.margin-xs-a-l {
  margin-top: 60px !important;
}
.margin-xs-t-xl,
.margin-xs-v-xl,
.margin-xs-a-xl {
  margin-top: 120px !important;
}
.margin-xs-r-n,
.margin-xs-h-n,
.margin-xs-a-n {
  margin-right: 0 !important;
}
.margin-xs-r-s,
.margin-xs-h-s,
.margin-xs-a-s {
  margin-right: 15px !important;
}
.margin-xs-r-m,
.margin-xs-h-m,
.margin-xs-a-m {
  margin-right: 30px !important;
}
.margin-xs-r-l,
.margin-xs-h-l,
.margin-xs-a-l {
  margin-right: 60px !important;
}
.margin-xs-r-xl,
.margin-xs-h-xl,
.margin-xs-a-xl {
  margin-right: 120px !important;
}
.margin-xs-b-n,
.margin-xs-v-n,
.margin-xs-a-n {
  margin-bottom: 0 !important;
}
.margin-xs-b-s,
.margin-xs-v-s,
.margin-xs-a-s {
  margin-bottom: 15px !important;
}
.margin-xs-b-m,
.margin-xs-v-m,
.margin-xs-a-m {
  margin-bottom: 30px !important;
}
.margin-xs-b-l,
.margin-xs-v-l,
.margin-xs-a-l {
  margin-bottom: 60px !important;
}
.margin-xs-b-xl,
.margin-xs-v-xl,
.margin-xs-a-xl {
  margin-bottom: 120px !important;
}
.margin-xs-l-n,
.margin-xs-h-n,
.margin-xs-a-n {
  margin-left: 0 !important;
}
.margin-xs-l-s,
.margin-xs-h-s,
.margin-xs-a-s {
  margin-left: 15px !important;
}
.margin-xs-l-m,
.margin-xs-h-m,
.margin-xs-a-m {
  margin-left: 30px !important;
}
.margin-xs-l-l,
.margin-xs-h-l,
.margin-xs-a-l {
  margin-left: 60px !important;
}
.margin-xs-l-xl,
.margin-xs-h-xl,
.margin-xs-a-xl {
  margin-left: 120px !important;
}
/* paddings */
.padding-xs-t-n,
.padding-xs-v-n,
.padding-xs-a-n {
  padding-top: 0 !important;
}
.padding-xs-t-s,
.padding-xs-v-s,
.padding-xs-a-s {
  padding-top: 15px !important;
}
.padding-xs-t-m,
.padding-xs-v-m,
.padding-xs-a-m {
  padding-top: 30px !important;
}
.padding-xs-t-l,
.padding-xs-v-l,
.padding-xs-a-l {
  padding-top: 60px !important;
}
.padding-xs-t-xl,
.padding-xs-v-xl,
.padding-xs-a-xl {
  padding-top: 120px !important;
}
.padding-xs-r-n,
.padding-xs-h-n,
.padding-xs-a-n {
  padding-right: 0 !important;
}
.padding-xs-r-s,
.padding-xs-h-s,
.padding-xs-a-s {
  padding-right: 15px !important;
}
.padding-xs-r-m,
.padding-xs-h-m,
.padding-xs-a-m {
  padding-right: 30px !important;
}
.padding-xs-r-l,
.padding-xs-h-l,
.padding-xs-a-l {
  padding-right: 60px !important;
}
.padding-xs-r-xl,
.padding-xs-h-xl,
.padding-xs-a-xl {
  padding-right: 120px !important;
}
.padding-xs-b-n,
.padding-xs-v-n,
.padding-xs-a-n {
  padding-bottom: 0 !important;
}
.padding-xs-b-s,
.padding-xs-v-s,
.padding-xs-a-s {
  padding-bottom: 15px !important;
}
.padding-xs-b-m,
.padding-xs-v-m,
.padding-xs-a-m {
  padding-bottom: 30px !important;
}
.padding-xs-b-l,
.padding-xs-v-l,
.padding-xs-a-l {
  padding-bottom: 60px !important;
}
.padding-xs-b-xl,
.padding-xs-v-xl,
.padding-xs-a-xl {
  padding-bottom: 120px !important;
}
.padding-xs-l-n,
.padding-xs-h-n,
.padding-xs-a-n {
  padding-left: 0 !important;
}
.padding-xs-l-s,
.padding-xs-h-s,
.padding-xs-a-s {
  padding-left: 15px !important;
}
.padding-xs-l-m,
.padding-xs-h-m,
.padding-xs-a-m {
  padding-left: 30px !important;
}
.padding-xs-l-l,
.padding-xs-h-l,
.padding-xs-a-l {
  padding-left: 60px !important;
}
.padding-xs-l-xl,
.padding-xs-h-xl,
.padding-xs-a-xl {
  padding-left: 120px !important;
}
@media (min-width: 768px) {
  /* margins */
  .margin-sm-t-n,
  .margin-sm-v-n,
  .margin-sm-a-n {
    margin-top: 0 !important;
  }
  .margin-sm-t-s,
  .margin-sm-v-s,
  .margin-sm-a-s {
    margin-top: 15px !important;
  }
  .margin-sm-t-m,
  .margin-sm-v-m,
  .margin-sm-a-m {
    margin-top: 30px !important;
  }
  .margin-sm-t-l,
  .margin-sm-v-l,
  .margin-sm-a-l {
    margin-top: 60px !important;
  }
  .margin-sm-t-xl,
  .margin-sm-v-xl,
  .margin-sm-a-xl {
    margin-top: 120px !important;
  }
  .margin-sm-r-n,
  .margin-sm-h-n,
  .margin-sm-a-n {
    margin-right: 0 !important;
  }
  .margin-sm-r-s,
  .margin-sm-h-s,
  .margin-sm-a-s {
    margin-right: 15px !important;
  }
  .margin-sm-r-m,
  .margin-sm-h-m,
  .margin-sm-a-m {
    margin-right: 30px !important;
  }
  .margin-sm-r-l,
  .margin-sm-h-l,
  .margin-sm-a-l {
    margin-right: 60px !important;
  }
  .margin-sm-r-xl,
  .margin-sm-h-xl,
  .margin-sm-a-xl {
    margin-right: 120px !important;
  }
  .margin-sm-b-n,
  .margin-sm-v-n,
  .margin-sm-a-n {
    margin-bottom: 0 !important;
  }
  .margin-sm-b-s,
  .margin-sm-v-s,
  .margin-sm-a-s {
    margin-bottom: 15px !important;
  }
  .margin-sm-b-m,
  .margin-sm-v-m,
  .margin-sm-a-m {
    margin-bottom: 30px !important;
  }
  .margin-sm-b-l,
  .margin-sm-v-l,
  .margin-sm-a-l {
    margin-bottom: 60px !important;
  }
  .margin-sm-b-xl,
  .margin-sm-v-xl,
  .margin-sm-a-xl {
    margin-bottom: 120px !important;
  }
  .margin-sm-l-n,
  .margin-sm-h-n,
  .margin-sm-a-n {
    margin-left: 0 !important;
  }
  .margin-sm-l-s,
  .margin-sm-h-s,
  .margin-sm-a-s {
    margin-left: 15px !important;
  }
  .margin-sm-l-m,
  .margin-sm-h-m,
  .margin-sm-a-m {
    margin-left: 30px !important;
  }
  .margin-sm-l-l,
  .margin-sm-h-l,
  .margin-sm-a-l {
    margin-left: 60px !important;
  }
  .margin-sm-l-xl,
  .margin-sm-h-xl,
  .margin-sm-a-xl {
    margin-left: 120px !important;
  }
  /* paddings */
  .padding-sm-t-n,
  .padding-sm-v-n,
  .padding-sm-a-n {
    padding-top: 0 !important;
  }
  .padding-sm-t-s,
  .padding-sm-v-s,
  .padding-sm-a-s {
    padding-top: 15px !important;
  }
  .padding-sm-t-m,
  .padding-sm-v-m,
  .padding-sm-a-m {
    padding-top: 30px !important;
  }
  .padding-sm-t-l,
  .padding-sm-v-l,
  .padding-sm-a-l {
    padding-top: 60px !important;
  }
  .padding-sm-t-xl,
  .padding-sm-v-xl,
  .padding-sm-a-xl {
    padding-top: 120px !important;
  }
  .padding-sm-r-n,
  .padding-sm-h-n,
  .padding-sm-a-n {
    padding-right: 0 !important;
  }
  .padding-sm-r-s,
  .padding-sm-h-s,
  .padding-sm-a-s {
    padding-right: 15px !important;
  }
  .padding-sm-r-m,
  .padding-sm-h-m,
  .padding-sm-a-m {
    padding-right: 30px !important;
  }
  .padding-sm-r-l,
  .padding-sm-h-l,
  .padding-sm-a-l {
    padding-right: 60px !important;
  }
  .padding-sm-r-xl,
  .padding-sm-h-xl,
  .padding-sm-a-xl {
    padding-right: 120px !important;
  }
  .padding-sm-b-n,
  .padding-sm-v-n,
  .padding-sm-a-n {
    padding-bottom: 0 !important;
  }
  .padding-sm-b-s,
  .padding-sm-v-s,
  .padding-sm-a-s {
    padding-bottom: 15px !important;
  }
  .padding-sm-b-m,
  .padding-sm-v-m,
  .padding-sm-a-m {
    padding-bottom: 30px !important;
  }
  .padding-sm-b-l,
  .padding-sm-v-l,
  .padding-sm-a-l {
    padding-bottom: 60px !important;
  }
  .padding-sm-b-xl,
  .padding-sm-v-xl,
  .padding-sm-a-xl {
    padding-bottom: 120px !important;
  }
  .padding-sm-l-n,
  .padding-sm-h-n,
  .padding-sm-a-n {
    padding-left: 0 !important;
  }
  .padding-sm-l-s,
  .padding-sm-h-s,
  .padding-sm-a-s {
    padding-left: 15px !important;
  }
  .padding-sm-l-m,
  .padding-sm-h-m,
  .padding-sm-a-m {
    padding-left: 30px !important;
  }
  .padding-sm-l-l,
  .padding-sm-h-l,
  .padding-sm-a-l {
    padding-left: 60px !important;
  }
  .padding-sm-l-xl,
  .padding-sm-h-xl,
  .padding-sm-a-xl {
    padding-left: 120px !important;
  }
}
@media (min-width: 992px) {
  /* margins */
  .margin-md-t-n,
  .margin-md-v-n,
  .margin-md-a-n {
    margin-top: 0 !important;
  }
  .margin-md-t-s,
  .margin-md-v-s,
  .margin-md-a-s {
    margin-top: 15px !important;
  }
  .margin-md-t-m,
  .margin-md-v-m,
  .margin-md-a-m {
    margin-top: 30px !important;
  }
  .margin-md-t-l,
  .margin-md-v-l,
  .margin-md-a-l {
    margin-top: 60px !important;
  }
  .margin-md-t-xl,
  .margin-md-v-xl,
  .margin-md-a-xl {
    margin-top: 120px !important;
  }
  .margin-md-r-n,
  .margin-md-h-n,
  .margin-md-a-n {
    margin-right: 0 !important;
  }
  .margin-md-r-s,
  .margin-md-h-s,
  .margin-md-a-s {
    margin-right: 15px !important;
  }
  .margin-md-r-m,
  .margin-md-h-m,
  .margin-md-a-m {
    margin-right: 30px !important;
  }
  .margin-md-r-l,
  .margin-md-h-l,
  .margin-md-a-l {
    margin-right: 60px !important;
  }
  .margin-md-r-xl,
  .margin-md-h-xl,
  .margin-md-a-xl {
    margin-right: 120px !important;
  }
  .margin-md-b-n,
  .margin-md-v-n,
  .margin-md-a-n {
    margin-bottom: 0 !important;
  }
  .margin-md-b-s,
  .margin-md-v-s,
  .margin-md-a-s {
    margin-bottom: 15px !important;
  }
  .margin-md-b-m,
  .margin-md-v-m,
  .margin-md-a-m {
    margin-bottom: 30px !important;
  }
  .margin-md-b-l,
  .margin-md-v-l,
  .margin-md-a-l {
    margin-bottom: 60px !important;
  }
  .margin-md-b-xl,
  .margin-md-v-xl,
  .margin-md-a-xl {
    margin-bottom: 120px !important;
  }
  .margin-md-l-n,
  .margin-md-h-n,
  .margin-md-a-n {
    margin-left: 0 !important;
  }
  .margin-md-l-s,
  .margin-md-h-s,
  .margin-md-a-s {
    margin-left: 15px !important;
  }
  .margin-md-l-m,
  .margin-md-h-m,
  .margin-md-a-m {
    margin-left: 30px !important;
  }
  .margin-md-l-l,
  .margin-md-h-l,
  .margin-md-a-l {
    margin-left: 60px !important;
  }
  .margin-md-l-xl,
  .margin-md-h-xl,
  .margin-md-a-xl {
    margin-left: 120px !important;
  }
  /* paddings */
  .padding-md-t-n,
  .padding-md-v-n,
  .padding-md-a-n {
    padding-top: 0 !important;
  }
  .padding-md-t-s,
  .padding-md-v-s,
  .padding-md-a-s {
    padding-top: 15px !important;
  }
  .padding-md-t-m,
  .padding-md-v-m,
  .padding-md-a-m {
    padding-top: 30px !important;
  }
  .padding-md-t-l,
  .padding-md-v-l,
  .padding-md-a-l {
    padding-top: 60px !important;
  }
  .padding-md-t-xl,
  .padding-md-v-xl,
  .padding-md-a-xl {
    padding-top: 120px !important;
  }
  .padding-md-r-n,
  .padding-md-h-n,
  .padding-md-a-n {
    padding-right: 0 !important;
  }
  .padding-md-r-s,
  .padding-md-h-s,
  .padding-md-a-s {
    padding-right: 15px !important;
  }
  .padding-md-r-m,
  .padding-md-h-m,
  .padding-md-a-m {
    padding-right: 30px !important;
  }
  .padding-md-r-l,
  .padding-md-h-l,
  .padding-md-a-l {
    padding-right: 60px !important;
  }
  .padding-md-r-xl,
  .padding-md-h-xl,
  .padding-md-a-xl {
    padding-right: 120px !important;
  }
  .padding-md-b-n,
  .padding-md-v-n,
  .padding-md-a-n {
    padding-bottom: 0 !important;
  }
  .padding-md-b-s,
  .padding-md-v-s,
  .padding-md-a-s {
    padding-bottom: 15px !important;
  }
  .padding-md-b-m,
  .padding-md-v-m,
  .padding-md-a-m {
    padding-bottom: 30px !important;
  }
  .padding-md-b-l,
  .padding-md-v-l,
  .padding-md-a-l {
    padding-bottom: 60px !important;
  }
  .padding-md-b-xl,
  .padding-md-v-xl,
  .padding-md-a-xl {
    padding-bottom: 120px !important;
  }
  .padding-md-l-n,
  .padding-md-h-n,
  .padding-md-a-n {
    padding-left: 0 !important;
  }
  .padding-md-l-s,
  .padding-md-h-s,
  .padding-md-a-s {
    padding-left: 15px !important;
  }
  .padding-md-l-m,
  .padding-md-h-m,
  .padding-md-a-m {
    padding-left: 30px !important;
  }
  .padding-md-l-l,
  .padding-md-h-l,
  .padding-md-a-l {
    padding-left: 60px !important;
  }
  .padding-md-l-xl,
  .padding-md-h-xl,
  .padding-md-a-xl {
    padding-left: 120px !important;
  }
}
@media (min-width: 1200px) {
  /* margins */
  .margin-lg-t-n,
  .margin-lg-v-n,
  .margin-lg-a-n {
    margin-top: 0 !important;
  }
  .margin-lg-t-s,
  .margin-lg-v-s,
  .margin-lg-a-s {
    margin-top: 15px !important;
  }
  .margin-lg-t-m,
  .margin-lg-v-m,
  .margin-lg-a-m {
    margin-top: 30px !important;
  }
  .margin-lg-t-l,
  .margin-lg-v-l,
  .margin-lg-a-l {
    margin-top: 60px !important;
  }
  .margin-lg-t-xl,
  .margin-lg-v-xl,
  .margin-lg-a-xl {
    margin-top: 120px !important;
  }
  .margin-lg-r-n,
  .margin-lg-h-n,
  .margin-lg-a-n {
    margin-right: 0 !important;
  }
  .margin-lg-r-s,
  .margin-lg-h-s,
  .margin-lg-a-s {
    margin-right: 15px !important;
  }
  .margin-lg-r-m,
  .margin-lg-h-m,
  .margin-lg-a-m {
    margin-right: 30px !important;
  }
  .margin-lg-r-l,
  .margin-lg-h-l,
  .margin-lg-a-l {
    margin-right: 60px !important;
  }
  .margin-lg-r-xl,
  .margin-lg-h-xl,
  .margin-lg-a-xl {
    margin-right: 120px !important;
  }
  .margin-lg-b-n,
  .margin-lg-v-n,
  .margin-lg-a-n {
    margin-bottom: 0 !important;
  }
  .margin-lg-b-s,
  .margin-lg-v-s,
  .margin-lg-a-s {
    margin-bottom: 15px !important;
  }
  .margin-lg-b-m,
  .margin-lg-v-m,
  .margin-lg-a-m {
    margin-bottom: 30px !important;
  }
  .margin-lg-b-l,
  .margin-lg-v-l,
  .margin-lg-a-l {
    margin-bottom: 60px !important;
  }
  .margin-lg-b-xl,
  .margin-lg-v-xl,
  .margin-lg-a-xl {
    margin-bottom: 120px !important;
  }
  .margin-lg-l-n,
  .margin-lg-h-n,
  .margin-lg-a-n {
    margin-left: 0 !important;
  }
  .margin-lg-l-s,
  .margin-lg-h-s,
  .margin-lg-a-s {
    margin-left: 15px !important;
  }
  .margin-lg-l-m,
  .margin-lg-h-m,
  .margin-lg-a-m {
    margin-left: 30px !important;
  }
  .margin-lg-l-l,
  .margin-lg-h-l,
  .margin-lg-a-l {
    margin-left: 60px !important;
  }
  .margin-lg-l-xl,
  .margin-lg-h-xl,
  .margin-lg-a-xl {
    margin-left: 120px !important;
  }
  /* paddings */
  .padding-lg-t-n,
  .padding-lg-v-n,
  .padding-lg-a-n {
    padding-top: 0 !important;
  }
  .padding-lg-t-s,
  .padding-lg-v-s,
  .padding-lg-a-s {
    padding-top: 15px !important;
  }
  .padding-lg-t-m,
  .padding-lg-v-m,
  .padding-lg-a-m {
    padding-top: 30px !important;
  }
  .padding-lg-t-l,
  .padding-lg-v-l,
  .padding-lg-a-l {
    padding-top: 60px !important;
  }
  .padding-lg-t-xl,
  .padding-lg-v-xl,
  .padding-lg-a-xl {
    padding-top: 120px !important;
  }
  .padding-lg-r-n,
  .padding-lg-h-n,
  .padding-lg-a-n {
    padding-right: 0 !important;
  }
  .padding-lg-r-s,
  .padding-lg-h-s,
  .padding-lg-a-s {
    padding-right: 15px !important;
  }
  .padding-lg-r-m,
  .padding-lg-h-m,
  .padding-lg-a-m {
    padding-right: 30px !important;
  }
  .padding-lg-r-l,
  .padding-lg-h-l,
  .padding-lg-a-l {
    padding-right: 60px !important;
  }
  .padding-lg-r-xl,
  .padding-lg-h-xl,
  .padding-lg-a-xl {
    padding-right: 120px !important;
  }
  .padding-lg-b-n,
  .padding-lg-v-n,
  .padding-lg-a-n {
    padding-bottom: 0 !important;
  }
  .padding-lg-b-s,
  .padding-lg-v-s,
  .padding-lg-a-s {
    padding-bottom: 15px !important;
  }
  .padding-lg-b-m,
  .padding-lg-v-m,
  .padding-lg-a-m {
    padding-bottom: 30px !important;
  }
  .padding-lg-b-l,
  .padding-lg-v-l,
  .padding-lg-a-l {
    padding-bottom: 60px !important;
  }
  .padding-lg-b-xl,
  .padding-lg-v-xl,
  .padding-lg-a-xl {
    padding-bottom: 120px !important;
  }
  .padding-lg-l-n,
  .padding-lg-h-n,
  .padding-lg-a-n {
    padding-left: 0 !important;
  }
  .padding-lg-l-s,
  .padding-lg-h-s,
  .padding-lg-a-s {
    padding-left: 15px !important;
  }
  .padding-lg-l-m,
  .padding-lg-h-m,
  .padding-lg-a-m {
    padding-left: 30px !important;
  }
  .padding-lg-l-l,
  .padding-lg-h-l,
  .padding-lg-a-l {
    padding-left: 60px !important;
  }
  .padding-lg-l-xl,
  .padding-lg-h-xl,
  .padding-lg-a-xl {
    padding-left: 120px !important;
  }
}
/* ==========================================================================
   Responsive version of some BS utilities
   ========================================================================== */
/**
 * 
 * - Responsive versions of the .pull-left and .pull-right classes
 * - a .clear class that simply clears the floats (with responsive version) 
 *
 */
.pull-xs-right {
  float: right !important;
}
.pull-xs-left {
  float: left !important;
}
.pull-xs-none {
  float: none !important;
}
.clear,
.clear-xs {
  clear: both;
}
@media (min-width: 768px) {
  .pull-sm-right {
    float: right !important;
  }
  .pull-sm-left {
    float: left !important;
  }
  .pull-sm-none {
    float: none !important;
  }
  .clear-sm {
    clear: both;
  }
}
@media (min-width: 992px) {
  .pull-md-right {
    float: right !important;
  }
  .pull-md-left {
    float: left !important;
  }
  .pull-md-none {
    float: none !important;
  }
  .clear-md {
    clear: both;
  }
}
@media (min-width: 1200px) {
  .pull-lg-right {
    float: right !important;
  }
  .pull-lg-left {
    float: left !important;
  }
  .pull-lg-none {
    float: none !important;
  }
  .clear-lg {
    clear: both;
  }
}
/*# sourceMappingURL=Bootstrap-walking-extras.css.map */