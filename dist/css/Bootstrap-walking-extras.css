/* 
Bootstrap Walking Extras
========================

This is the main file for the styles, it simply includes all the other files. 
You can use it as a base if you wish to customize it

*/
/*
Available Variables
===================
*/
/*
## Responsive positioning

These variables control how the spacing defined in the Positioning-responsive classes.
By default it is set to the gid-gutter-width defined in bootstrap

```css
@positioning-size-xs-horizontal: 	@grid-gutter-width;
@positioning-size-xs-vertical: 		@grid-gutter-width;

@positioning-size-sm-horizontal: 	@grid-gutter-width;
@positioning-size-sm-vertical: 		@grid-gutter-width;

@positioning-size-md-horizontal: 	@grid-gutter-width;
@positioning-size-md-vertical: 		@grid-gutter-width;

@positioning-size-lg-horizontal: 	@grid-gutter-width;
@positioning-size-lg-vertical: 		@grid-gutter-width;
```
*/
/*
## Overlays

These variables control styling aspects of the Overlay

```css
@overlay-area-padding: 				@thumbnail-caption-padding;
@overlay-area-color: 				rgba(255,255,255,0.6);
@overlay-area-bg: 					rgba(0,0,0,0.3);
@overlay-icon-size: 				4em;
```
*/
/*
## Overlays

These variables control the default size of a flip panel

```css
@flip-panel-base-width: 			200px;
@flip-panel-base-height: 			200px;
```
*/
/*
## Stat

These variables control the Stat colors

```css
@stat-primary-color:           @brand-primary;
@stat-success-color:           @brand-success;
@stat-info-color:              @brand-info;
@stat-warning-color:           @brand-warning;
@stat-danger-color:            @brand-danger;
```
*/
/*
## Stat

These variables control the Date styles 
```css
@date-border-color:            @gray-lighter;
@date-bg-color:                #fff;
@date-default-color:           @gray-light;
@date-primary-color:           @brand-primary;
@date-success-color:           @brand-success;
@date-info-color:              @brand-info;
@date-warning-color:           @brand-warning;
@date-danger-color:            @brand-danger;
```
*/
/*
Mixins
=========

This is a set of helper functions

*/
/*
Font face
=========

You can use this function to quickly add a custom font, it will generate the correct syntax for you

```css
@font-face {
    .font-face(@fontname, @fontfile);
}
```

*/
/*
Background noise
=========
You can use this function to ad some random noise as a background image

```css
.my-selector {
    .background-noise();
}
```

*/
/*
stat-variant
=========
You can use this function to create a variation on the Stat(istic) element

```css
.my-stat {
    .stat-variant(@color);
}
```

*/
/*
date-variant
=========

You can use this function to create a variation on the Date element

```css
.my-date {
    .date-variant(@color);
}
```

*/
/*
Stripe
=========

You can use this function to create a stripe. a stripe is an element that spans the entire width of the screen
In which you can define the overflow to the left and right of the element

```css
.my-stripe {
    .stripe(@leftBackground ; @rightBackground);
}
```
    <div class="stripe-demo">
        <div class="container">
            <div class="row">
                <div class="col-xs-6">
                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Debitis molestiae, eligendi fuga autem. Minus dolorem maiores ducimus consequatur enim, aperiam voluptatibus quaerat facere hic tempora itaque possimus esse ea accusantium laboriosam qui explicabo dicta.</p>
                </div>
                <div class="col-xs-6">
                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Debitis molestiae, eligendi fuga autem. Minus dolorem maiores ducimus consequatur enim, aperiam voluptatibus quaerat facere hic tempora itaque possimus esse ea accusantium laboriosam qui explicabo dicta.</p>
                </div>
            </div>
        </div>
    </div>

### Combined with a row aligned

    <div class="stripe-demo">
        <div class="container">
            <div class="row row-aligned">
                <div class="col-sm-4" style="background:PaleTurquoise;">
                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Debitis molestiae, eligendi fuga autem. Minus dolorem maiores ducimus consequatur enim, aperiam voluptatibus quaerat facere hic tempora itaque possimus esse ea accusantium laboriosam qui explicabo dicta..</p>
                </div>
                <div class="col-sm-8" style="background:Pink;">
                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Debitis molestiae, eligendi fuga autem. Minus dolorem maiores ducimus consequatur enim, aperiam voluptatibus quaerat facere hic tempora itaque possimus esse ea accusantium laboriosam qui explicabo dicta.</p>
                </div>
            </div>
        </div>
    </div>

*/
/*
Block grids
 ===========

Block grids give you a way to evenly split its child elements within x columns.
You can resize your browser (or use the buttons in the doc) to see what happens

*inspired on http://foundation.zurb.com/docs/components/block_grid.html*

## Usage
`.grid-<BREAKPOINT>-<COLUMNS>`

`<breakpoint>`
-  xs = small spartphones
-  sm = tablets
-  md = small desktop
-  lg = large desktop

`<columns>`
-  1-12 = number of columns


    <div class="grid-xs-2 grid-sm-3 grid-md-4 grid-lg-5">
         <div class="cell"> <div class="well">1</div> </div>
         <div class="cell"> <div class="well">2</div> </div>
         <div class="cell"> <div class="well">3</div> </div>
         <div class="cell"> <div class="well">4</div> </div>
         <div class="cell"> <div class="well">5</div> </div>
         <div class="cell"> <div class="well">6</div> </div>
         <div class="cell"> <div class="well">7</div> </div>
         <div class="cell"> <div class="well">8</div> </div>
         <div class="cell"> <div class="well">9</div> </div>
    </div>

*/
.grid-xs-1,
.grid-xs-2,
.grid-xs-3,
.grid-xs-4,
.grid-xs-5,
.grid-xs-6,
.grid-xs-7,
.grid-xs-8,
.grid-xs-9,
.grid-xs-10,
.grid-xs-11,
.grid-xs-12,
.grid-sm-1,
.grid-sm-2,
.grid-sm-3,
.grid-sm-4,
.grid-sm-5,
.grid-sm-6,
.grid-sm-7,
.grid-sm-8,
.grid-sm-9,
.grid-sm-10,
.grid-sm-11,
.grid-sm-12,
.grid-md-1,
.grid-md-2,
.grid-md-3,
.grid-md-4,
.grid-md-5,
.grid-md-6,
.grid-md-7,
.grid-md-8,
.grid-md-9,
.grid-md-10,
.grid-md-11,
.grid-md-12,
.grid-lg-1,
.grid-lg-2,
.grid-lg-3,
.grid-lg-4,
.grid-lg-5,
.grid-lg-6,
.grid-lg-7,
.grid-lg-8,
.grid-lg-9,
.grid-lg-10,
.grid-lg-11,
.grid-lg-12 {
  margin-left: -15px;
  margin-right: -15px;
}
.grid-xs-1 > .cell,
.grid-xs-2 > .cell,
.grid-xs-3 > .cell,
.grid-xs-4 > .cell,
.grid-xs-5 > .cell,
.grid-xs-6 > .cell,
.grid-xs-7 > .cell,
.grid-xs-8 > .cell,
.grid-xs-9 > .cell,
.grid-xs-10 > .cell,
.grid-xs-11 > .cell,
.grid-xs-12 > .cell,
.grid-sm-1 > .cell,
.grid-sm-2 > .cell,
.grid-sm-3 > .cell,
.grid-sm-4 > .cell,
.grid-sm-5 > .cell,
.grid-sm-6 > .cell,
.grid-sm-7 > .cell,
.grid-sm-8 > .cell,
.grid-sm-9 > .cell,
.grid-sm-10 > .cell,
.grid-sm-11 > .cell,
.grid-sm-12 > .cell,
.grid-md-1 > .cell,
.grid-md-2 > .cell,
.grid-md-3 > .cell,
.grid-md-4 > .cell,
.grid-md-5 > .cell,
.grid-md-6 > .cell,
.grid-md-7 > .cell,
.grid-md-8 > .cell,
.grid-md-9 > .cell,
.grid-md-10 > .cell,
.grid-md-11 > .cell,
.grid-md-12 > .cell,
.grid-lg-1 > .cell,
.grid-lg-2 > .cell,
.grid-lg-3 > .cell,
.grid-lg-4 > .cell,
.grid-lg-5 > .cell,
.grid-lg-6 > .cell,
.grid-lg-7 > .cell,
.grid-lg-8 > .cell,
.grid-lg-9 > .cell,
.grid-lg-10 > .cell,
.grid-lg-11 > .cell,
.grid-lg-12 > .cell {
  position: relative;
  min-height: 1px;
  padding-left: 15px;
  padding-right: 15px;
}
.grid-xs-2 > .cell,
.grid-xs-3 > .cell,
.grid-xs-4 > .cell,
.grid-xs-5 > .cell,
.grid-xs-6 > .cell,
.grid-xs-7 > .cell,
.grid-xs-8 > .cell,
.grid-xs-9 > .cell,
.grid-xs-10 > .cell,
.grid-xs-11 > .cell,
.grid-xs-12 > .cell {
  float: left;
}
.grid-xs-1 > .cell {
  width: 100%;
}
.grid-xs-1 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-1 > .cell:nth-of-type(1n+1) {
  clear: both;
}
.grid-xs-2 > .cell {
  width: 50%;
}
.grid-xs-2 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-2 > .cell:nth-of-type(2n+1) {
  clear: both;
}
.grid-xs-3 > .cell {
  width: 33.33333333%;
}
.grid-xs-3 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-3 > .cell:nth-of-type(3n+1) {
  clear: both;
}
.grid-xs-4 > .cell {
  width: 25%;
}
.grid-xs-4 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-4 > .cell:nth-of-type(4n+1) {
  clear: both;
}
.grid-xs-5 > .cell {
  width: 20%;
}
.grid-xs-5 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-5 > .cell:nth-of-type(5n+1) {
  clear: both;
}
.grid-xs-6 > .cell {
  width: 16.66666667%;
}
.grid-xs-6 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-6 > .cell:nth-of-type(6n+1) {
  clear: both;
}
.grid-xs-7 > .cell {
  width: 14.28571429%;
}
.grid-xs-7 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-7 > .cell:nth-of-type(7n+1) {
  clear: both;
}
.grid-xs-8 > .cell {
  width: 12.5%;
}
.grid-xs-8 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-8 > .cell:nth-of-type(8n+1) {
  clear: both;
}
.grid-xs-9 > .cell {
  width: 11.11111111%;
}
.grid-xs-9 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-9 > .cell:nth-of-type(9n+1) {
  clear: both;
}
.grid-xs-10 > .cell {
  width: 10%;
}
.grid-xs-10 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-10 > .cell:nth-of-type(10n+1) {
  clear: both;
}
.grid-xs-11 > .cell {
  width: 9.09090909%;
}
.grid-xs-11 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-11 > .cell:nth-of-type(11n+1) {
  clear: both;
}
.grid-xs-12 > .cell {
  width: 8.33333333%;
}
.grid-xs-12 > .cell:nth-of-type(n) {
  clear: none;
}
.grid-xs-12 > .cell:nth-of-type(12n+1) {
  clear: both;
}
@media (min-width: 768px) {
  .grid-sm-2 > .cell,
  .grid-sm-3 > .cell,
  .grid-sm-4 > .cell,
  .grid-sm-5 > .cell,
  .grid-sm-6 > .cell,
  .grid-sm-7 > .cell,
  .grid-sm-8 > .cell,
  .grid-sm-9 > .cell,
  .grid-sm-10 > .cell,
  .grid-sm-11 > .cell,
  .grid-sm-12 > .cell {
    float: left;
  }
  .grid-sm-1 > .cell {
    width: 100%;
  }
  .grid-sm-1 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-1 > .cell:nth-of-type(1n+1) {
    clear: both;
  }
  .grid-sm-2 > .cell {
    width: 50%;
  }
  .grid-sm-2 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-2 > .cell:nth-of-type(2n+1) {
    clear: both;
  }
  .grid-sm-3 > .cell {
    width: 33.33333333%;
  }
  .grid-sm-3 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-3 > .cell:nth-of-type(3n+1) {
    clear: both;
  }
  .grid-sm-4 > .cell {
    width: 25%;
  }
  .grid-sm-4 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-4 > .cell:nth-of-type(4n+1) {
    clear: both;
  }
  .grid-sm-5 > .cell {
    width: 20%;
  }
  .grid-sm-5 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-5 > .cell:nth-of-type(5n+1) {
    clear: both;
  }
  .grid-sm-6 > .cell {
    width: 16.66666667%;
  }
  .grid-sm-6 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-6 > .cell:nth-of-type(6n+1) {
    clear: both;
  }
  .grid-sm-7 > .cell {
    width: 14.28571429%;
  }
  .grid-sm-7 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-7 > .cell:nth-of-type(7n+1) {
    clear: both;
  }
  .grid-sm-8 > .cell {
    width: 12.5%;
  }
  .grid-sm-8 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-8 > .cell:nth-of-type(8n+1) {
    clear: both;
  }
  .grid-sm-9 > .cell {
    width: 11.11111111%;
  }
  .grid-sm-9 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-9 > .cell:nth-of-type(9n+1) {
    clear: both;
  }
  .grid-sm-10 > .cell {
    width: 10%;
  }
  .grid-sm-10 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-10 > .cell:nth-of-type(10n+1) {
    clear: both;
  }
  .grid-sm-11 > .cell {
    width: 9.09090909%;
  }
  .grid-sm-11 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-11 > .cell:nth-of-type(11n+1) {
    clear: both;
  }
  .grid-sm-12 > .cell {
    width: 8.33333333%;
  }
  .grid-sm-12 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-sm-12 > .cell:nth-of-type(12n+1) {
    clear: both;
  }
}
@media (min-width: 992px) {
  .grid-md-2 > .cell,
  .grid-md-3 > .cell,
  .grid-md-4 > .cell,
  .grid-md-5 > .cell,
  .grid-md-6 > .cell,
  .grid-md-7 > .cell,
  .grid-md-8 > .cell,
  .grid-md-9 > .cell,
  .grid-md-10 > .cell,
  .grid-md-11 > .cell,
  .grid-md-12 > .cell {
    float: left;
  }
  .grid-md-1 > .cell {
    width: 100%;
  }
  .grid-md-1 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-1 > .cell:nth-of-type(1n+1) {
    clear: both;
  }
  .grid-md-2 > .cell {
    width: 50%;
  }
  .grid-md-2 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-2 > .cell:nth-of-type(2n+1) {
    clear: both;
  }
  .grid-md-3 > .cell {
    width: 33.33333333%;
  }
  .grid-md-3 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-3 > .cell:nth-of-type(3n+1) {
    clear: both;
  }
  .grid-md-4 > .cell {
    width: 25%;
  }
  .grid-md-4 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-4 > .cell:nth-of-type(4n+1) {
    clear: both;
  }
  .grid-md-5 > .cell {
    width: 20%;
  }
  .grid-md-5 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-5 > .cell:nth-of-type(5n+1) {
    clear: both;
  }
  .grid-md-6 > .cell {
    width: 16.66666667%;
  }
  .grid-md-6 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-6 > .cell:nth-of-type(6n+1) {
    clear: both;
  }
  .grid-md-7 > .cell {
    width: 14.28571429%;
  }
  .grid-md-7 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-7 > .cell:nth-of-type(7n+1) {
    clear: both;
  }
  .grid-md-8 > .cell {
    width: 12.5%;
  }
  .grid-md-8 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-8 > .cell:nth-of-type(8n+1) {
    clear: both;
  }
  .grid-md-9 > .cell {
    width: 11.11111111%;
  }
  .grid-md-9 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-9 > .cell:nth-of-type(9n+1) {
    clear: both;
  }
  .grid-md-10 > .cell {
    width: 10%;
  }
  .grid-md-10 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-10 > .cell:nth-of-type(10n+1) {
    clear: both;
  }
  .grid-md-11 > .cell {
    width: 9.09090909%;
  }
  .grid-md-11 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-11 > .cell:nth-of-type(11n+1) {
    clear: both;
  }
  .grid-md-12 > .cell {
    width: 8.33333333%;
  }
  .grid-md-12 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-md-12 > .cell:nth-of-type(12n+1) {
    clear: both;
  }
}
@media (min-width: 1200px) {
  .grid-lg-2 > .cell,
  .grid-lg-3 > .cell,
  .grid-lg-4 > .cell,
  .grid-lg-5 > .cell,
  .grid-lg-6 > .cell,
  .grid-lg-7 > .cell,
  .grid-lg-8 > .cell,
  .grid-lg-9 > .cell,
  .grid-lg-10 > .cell,
  .grid-lg-11 > .cell,
  .grid-lg-12 > .cell {
    float: left;
  }
  .grid-lg-1 > .cell {
    width: 100%;
  }
  .grid-lg-1 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-1 > .cell:nth-of-type(1n+1) {
    clear: both;
  }
  .grid-lg-2 > .cell {
    width: 50%;
  }
  .grid-lg-2 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-2 > .cell:nth-of-type(2n+1) {
    clear: both;
  }
  .grid-lg-3 > .cell {
    width: 33.33333333%;
  }
  .grid-lg-3 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-3 > .cell:nth-of-type(3n+1) {
    clear: both;
  }
  .grid-lg-4 > .cell {
    width: 25%;
  }
  .grid-lg-4 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-4 > .cell:nth-of-type(4n+1) {
    clear: both;
  }
  .grid-lg-5 > .cell {
    width: 20%;
  }
  .grid-lg-5 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-5 > .cell:nth-of-type(5n+1) {
    clear: both;
  }
  .grid-lg-6 > .cell {
    width: 16.66666667%;
  }
  .grid-lg-6 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-6 > .cell:nth-of-type(6n+1) {
    clear: both;
  }
  .grid-lg-7 > .cell {
    width: 14.28571429%;
  }
  .grid-lg-7 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-7 > .cell:nth-of-type(7n+1) {
    clear: both;
  }
  .grid-lg-8 > .cell {
    width: 12.5%;
  }
  .grid-lg-8 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-8 > .cell:nth-of-type(8n+1) {
    clear: both;
  }
  .grid-lg-9 > .cell {
    width: 11.11111111%;
  }
  .grid-lg-9 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-9 > .cell:nth-of-type(9n+1) {
    clear: both;
  }
  .grid-lg-10 > .cell {
    width: 10%;
  }
  .grid-lg-10 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-10 > .cell:nth-of-type(10n+1) {
    clear: both;
  }
  .grid-lg-11 > .cell {
    width: 9.09090909%;
  }
  .grid-lg-11 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-11 > .cell:nth-of-type(11n+1) {
    clear: both;
  }
  .grid-lg-12 > .cell {
    width: 8.33333333%;
  }
  .grid-lg-12 > .cell:nth-of-type(n) {
    clear: none;
  }
  .grid-lg-12 > .cell:nth-of-type(12n+1) {
    clear: both;
  }
}
/* 
Button Iconed
=====================================

this class allows you to align an icon with the text in a btn, the icon will
always be aligned in the middle of the text.
This code is designed for both the default bootstrap glyphicons and Fontawesome.

    <a class="btn btn-default btn-iconed">
         <i class="glyphicon glyphicon-heart"></i>
         <span>[button text]</span>
    </a>

    <a class="btn btn-default btn-iconed">
         <span>[button text]</span>
         <i class="glyphicon glyphicon-heart"></i>
    </a>

    <a class="btn btn-default btn-iconed">
         <i class="glyphicon glyphicon-heart"></i>
         <span>[button text]</span>
         <i class="glyphicon glyphicon-heart"></i>
    </a>

## Long text 

    <a class="btn btn-default btn-iconed">
         <i class="glyphicon glyphicon-heart"></i>
         <span>Lorem ipsum dolor sit amet, <br> consectetur adipisicing<br> elit. Sequi, obcaecati<br> accusamus magni <br>nesciunt modi</span>
    </a>

    <a class="btn btn-default btn-iconed">
         <span>Lorem ipsum dolor sit amet, <br> consectetur adipisicing<br> elit. Sequi, obcaecati<br> accusamus magni <br>nesciunt modi</span>
         <i class="glyphicon glyphicon-heart"></i>
    </a>

    <a class="btn btn-default btn-iconed">
         <i class="glyphicon glyphicon-heart"></i>
         <span>Lorem ipsum dolor sit amet, <br> consectetur adipisicing<br> elit. Sequi, obcaecati<br> accusamus magni <br>nesciunt modi</span>
         <i class="glyphicon glyphicon-heart"></i>
    </a>

## Block level buttons

To the right

    <a href="#" class="btn btn-block btn-info btn-iconed">
        <span>Lorem ipsum dolor sit.</span> <i class="glyphicon glyphicon-tree-conifer"></i>
    </a>
    <a href="#" class="btn btn-block btn-info btn-iconed">
        <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit.<br> Sequi, obcaecati accusamus</span> <i class="glyphicon glyphicon-tree-conifer"></i>
    </a>

To the left

    <a href="#" class="btn btn-block btn-danger btn-iconed">
        <i class="glyphicon glyphicon-tree-conifer"></i> <span>Lorem ipsum dolor sit.</span> 
    </a>
    <a href="#" class="btn btn-block btn-danger btn-iconed">
        <i class="glyphicon glyphicon-tree-conifer"></i> <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit.<br> Sequi, obcaecati accusamus</span> 
    </a>

## Different btn sizes

inline

    <a href="#" class="btn btn-success btn-xs btn-iconed">
        <span>Lorem ipsum dolor sit.</span> <i class="glyphicon glyphicon-tree-conifer"></i>
    </a>
    <a href="#" class="btn btn-success btn-sm btn-iconed">
        <span>Lorem ipsum dolor sit.</span> <i class="glyphicon glyphicon-tree-conifer"></i>
    </a>
    <a href="#" class="btn btn-success btn-iconed">
        <span>Lorem ipsum dolor sit.</span> <i class="glyphicon glyphicon-tree-conifer"></i>
    </a>
    <a href="#" class="btn btn-success btn-lg btn-iconed">
        <span>Lorem ipsum dolor sit.</span> <i class="glyphicon glyphicon-tree-conifer"></i>
    </a>

block

    <a href="#" class="btn btn-block btn-warning btn-xs btn-iconed">
        <span>Lorem ipsum dolor sit.</span> <i class="glyphicon glyphicon-tree-conifer"></i>
    </a>
    <a href="#" class="btn btn-block btn-warning btn-sm btn-iconed">
        <span>Lorem ipsum dolor sit.</span> <i class="glyphicon glyphicon-tree-conifer"></i>
    </a>
    <a href="#" class="btn btn-block btn-warning btn-iconed">
        <span>Lorem ipsum dolor sit.</span> <i class="glyphicon glyphicon-tree-conifer"></i>
    </a>
    <a href="#" class="btn btn-block btn-warning btn-lg btn-iconed">
        <span>Lorem ipsum dolor sit.</span> <i class="glyphicon glyphicon-tree-conifer"></i>
    </a>

## Text alignment

    <a href="#" class="btn btn-primary btn-iconed">
        <i class="glyphicon glyphicon-tree-conifer"></i> 
        <span class="text-center">Center<br>Lorem ipsum <br> dolor sit amet, <br>conse.</span> 
        <i class="glyphicon glyphicon-tree-conifer"></i> 
    </a>

    <a href="#" class="btn btn-primary btn-iconed">
        <span class="text-right">Right<br>Lorem ipsum <br> dolor sit amet, <br>conse.</span> 
        <i class="glyphicon glyphicon-tree-conifer"></i> 
    </a>

    <a href="#" class="btn btn-primary btn-iconed">
        <i class="glyphicon glyphicon-tree-conifer"></i> 
        <span class="text-left">left<br>Lorem ipsum <br> dolor sit amet, <br>conse.</span> 
    </a>


*/
.btn-iconed {
  display: inline-table;
  white-space: normal;
  text-align: left;
  background-clip: padding-box;
}
.btn-iconed > span,
.btn-iconed .glyphicon,
.btn-iconed .fa {
  display: table-cell;
  vertical-align: middle;
}
.btn-iconed .glyphicon,
.btn-iconed .fa {
  width: 1.28571429em;
}
.btn-iconed > span + .glyphicon,
.btn-iconed > span + .fa {
  padding-left: .3em;
  padding-right: 0;
  text-align: right;
}
.btn-iconed.btn-block {
  display: table;
  padding-left: 12px;
  padding-right: 12px;
}
.btn-iconed.btn-block.btn-lg {
  padding-left: 16px;
  padding-right: 16px;
}
.btn-iconed.btn-block.btn-sm {
  padding-left: 10px;
  padding-right: 10px;
}
.btn-iconed.btn-block.btn-xs {
  padding-left: 5px;
  padding-right: 5px;
}
/* 
3D flip panels
===============

This class allows you to create panels that perform a 3D card flip when
hovered or when activated by js.

`!! you must specify a height and a width on the flip panel`

modifiers:
-  .flip = this extra class flips the box around, can be added by JS to make it flip
-  .hover = adding this class makes the panel flip on :hover.


    <div class="flip-panel hover" style="margin:30px;">
        <div class="front" style="background:pink;">[content of the front side]</div>
        <div class="back" style="background:beige;">[content of the back side]</div>
    </div>

## vertical flip

    <div class="flip-panel vertical hover" style="margin:30px;">
        <div class="front" style="background:pink;">[content of the front side]</div>
        <div class="back" style="background:beige;">[content of the back side]</div>
    </div>

## Diagonal flip

    <div class="flip-panel diagonal hover" style="margin:30px;">
        <div class="front" style="background:pink;">[content of the front side]</div>
        <div class="back" style="background:beige;">[content of the back side]</div>
    </div>

## Without hover effect

Use this if you wish to trigger the flip via JavaScript

    <div class="flip-panel" style="margin:30px;">
        <div class="front" style="background:pink;">[content of the front side]</div>
        <div class="back" style="background:beige;">[content of the back side]</div>
    </div>

    <div class="flip-panel flip" style="margin:30px;">
        <div class="front" style="background:pink;">[content of the front side]</div>
        <div class="back" style="background:beige;">[content of the back side]</div>
    </div>

*/
.flip-panel {
  width: 200px;
  height: 200px;
  position: relative;
  display: inline-block;
  -webkit-perspective: 600px;
  -moz-perspective: 600px;
  perspective: 600px;
  /* -- vertical axis rotation -- */
  /* -- diagonal axis rotation -- */
}
.flip-panel > .front {
  float: none;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
  width: inherit;
  height: inherit;
  -webkit-transform: rotateX(0deg) rotateY(0deg);
  -ms-transform: rotateX(0deg) rotateY(0deg);
  transform: rotateX(0deg) rotateY(0deg);
  -webkit-transform-style: preserve-3d;
  -moz-transform-style: preserve-3d;
  -ms-transform-style: preserve-3d;
  transform-style: preserve-3d;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden;
  /* -- transition is the magic sauce for animation -- */
  -webkit-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
}
.flip-panel.flip > .front,
.flip-panel.hover:hover > .front {
  z-index: 10;
  -webkit-transform: rotateY(180deg);
  -ms-transform: rotateY(180deg);
  -o-transform: rotateY(180deg);
  transform: rotateY(180deg);
}
.flip-panel > .back {
  float: none;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 800;
  width: inherit;
  height: inherit;
  -webkit-transform: rotateY(-180deg);
  -ms-transform: rotateY(-180deg);
  -o-transform: rotateY(-180deg);
  transform: rotateY(-180deg);
  -webkit-transform-style: preserve-3d;
  -moz-transform-style: preserve-3d;
  -ms-transform-style: preserve-3d;
  transform-style: preserve-3d;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden;
  /* -- transition is the magic sauce for animation -- */
  -webkit-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
}
.flip-panel.flip > .back,
.flip-panel.hover:hover > .back {
  z-index: 20;
  -webkit-transform: rotateX(0deg) rotateY(0deg);
  -ms-transform: rotateX(0deg) rotateY(0deg);
  transform: rotateX(0deg) rotateY(0deg);
}
.flip-panel.vertical > .front {
  -webkit-transform: rotateX(0deg) rotateY(0deg);
  -ms-transform: rotateX(0deg) rotateY(0deg);
  transform: rotateX(0deg) rotateY(0deg);
}
.flip-panel.vertical.flip > .front,
.flip-panel.vertical.hover:hover > .front {
  -webkit-transform: rotateX(180deg);
  -ms-transform: rotateX(180deg);
  -o-transform: rotateX(180deg);
  transform: rotateX(180deg);
}
.flip-panel.vertical > .back {
  -webkit-transform: rotateX(-180deg);
  -ms-transform: rotateX(-180deg);
  -o-transform: rotateX(-180deg);
  transform: rotateX(-180deg);
}
.flip-panel.vertical.flip > .back,
.flip-panel.vertical.hover:hover > .back {
  -webkit-transform: rotateX(0deg) rotateY(0deg);
  -ms-transform: rotateX(0deg) rotateY(0deg);
  transform: rotateX(0deg) rotateY(0deg);
}
.flip-panel.diagonal > .front {
  -webkit-transform: rotate3d(45, 45, 0, 0deg);
  -moz-transform: rotate3d(45, 45, 0, 0deg);
  -ms-transform: rotate3d(45, 45, 0, 0deg);
  transform: rotate3d(45, 45, 0, 0deg);
}
.flip-panel.diagonal.flip > .front,
.flip-panel.diagonal.hover:hover > .front {
  -webkit-transform: rotate3d(-45, -45, 0, 180deg);
  -moz-transform: rotate3d(-45, -45, 0, 180deg);
  -ms-transform: rotate3d(-45, -45, 0, 180deg);
  transform: rotate3d(-45, -45, 0, 180deg);
}
.flip-panel.diagonal > .back {
  -webkit-transform: rotate3d(45, 45, 0, -180deg);
  -moz-transform: rotate3d(45, 45, 0, -180deg);
  -ms-transform: rotate3d(45, 45, 0, -180deg);
  transform: rotate3d(45, 45, 0, -180deg);
}
.flip-panel.diagonal.flip > .back,
.flip-panel.diagonal.hover:hover > .back {
  -webkit-transform: rotate3d(45, 45, 0, 0deg);
  -moz-transform: rotate3d(45, 45, 0, 0deg);
  -ms-transform: rotate3d(45, 45, 0, 0deg);
  transform: rotate3d(45, 45, 0, 0deg);
}
/*
A basic css-only tooltip
======================== 

These are some basic tooltips using only css, they are very basic
so only use them for simple effects

Limitations:
-  only a single line is displayed as a tooltip
-  the tooltip is always aligned to whatever you define so might go off the screen
-  It does not work on special html elements linke `<input>`, `<img>`, ...


    <div class="for-demo-only" style="margin:50px 160px;">
        <a data-tooltip="[TOOLTIP TEXT]">
            Content with tooltip
        </a>
    </div>

*/
[data-tooltip] {
  position: relative;
}
[data-tooltip]:after {
  content: attr(data-tooltip);
  position: absolute;
  top: -35px;
  left: -20px;
  padding: 3px 8px;
  color: #ffffff;
  text-align: center;
  text-decoration: none;
  background-color: #000000;
  border-radius: 4px;
  white-space: nowrap;
  visibility: hidden;
  z-index: 1070;
}
[data-tooltip]:before {
  content: "";
  position: absolute;
  top: -9px;
  left: 5px;
  border-top: 5px solid #000000;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  visibility: hidden;
  z-index: 1070;
}
[data-tooltip]:hover:before,
[data-tooltip]:focus:before,
[data-tooltip]:hover:after,
[data-tooltip]:focus:after {
  visibility: visible;
}
/*
## Placed on the left

    <div class="for-demo-only" style="margin:50px 160px;">
        <a data-tooltip="[TOOLTIP TEXT]" data-placement="left">
            Content with tooltip
        </a>
    </div>

*/
[data-tooltip][data-placement=left]:after {
  top: 50%;
  left: auto;
  right: 100%;
  margin-top: -13px;
  margin-right: 9px;
}
[data-tooltip][data-placement=left]:before {
  top: 50%;
  left: auto;
  right: 100%;
  margin-right: 4px;
  border-top: 5px solid transparent;
  border-left: 5px solid #000000;
  border-bottom: 5px solid transparent;
  border-right: none;
  margin-top: -5px;
}
/*
## Placed on the bottom

    <div class="for-demo-only" style="margin:50px 160px;">
        <a data-tooltip="[TOOLTIP TEXT]" data-placement="bottom">
            Content with tooltip
        </a>
    </div>

*/
[data-tooltip][data-placement=bottom]:after {
  top: auto;
  bottom: -35px;
  left: -20px;
}
[data-tooltip][data-placement=bottom]:before {
  top: auto;
  bottom: -9px;
  left: 5px;
  border-top: none;
  border-left: 5px solid transparent;
  border-bottom: 5px solid #000000;
  border-right: 5px solid transparent;
}
/*
## Placed on the right

    <div class="for-demo-only" style="margin:50px 160px;">
        <a data-tooltip="[TOOLTIP TEXT]" data-placement="right">
            Content with tooltip
        </a>
    </div>

*/
[data-tooltip][data-placement=right]:after {
  top: 50%;
  left: 100%;
  margin-top: -13px;
  margin-left: 9px;
}
[data-tooltip][data-placement=right]:before {
  top: 50%;
  left: 100%;
  margin-left: 4px;
  border-top: 5px solid transparent;
  border-right: 5px solid #000000;
  border-bottom: 5px solid transparent;
  border-left: none;
  margin-top: -5px;
}
/* 
Overlay
=======

*inspired on http://www.getuikit.com/docs/overlay.html*

## With an icon
    <a class="overlay" href="">
      <img src="http://placehold.it/200x200" height="200" width="200" alt="">
      <div class="overlay-area">
        <i class="overlay-icon glyphicon glyphicon-play"></i>
      </div>
    </a>

## With text
    <a class="overlay" href="">
      <img src="http://placehold.it/200x200" height="200" width="200" alt="">
      <div class="overlay-area">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis tincidunt lorem et quam ullamcorper lobortis. Praesent in tellus sem. Cras sollicitudin dui id purus scelerisque, eu aliquet massa posuere.
      </div>
    </a>

## with an image
    <div class="overlay">
      <img src="http://placehold.it/200x200" height="200" width="200" alt="">
      <div class="overlay-area">
        <img src="http://placehold.it/180x180" height="180" width="180" alt="">
      </div>
    </div>

## with complex elements
    <div class="overlay">
      <img src="http://placehold.it/200x200" height="200" width="200" alt="">
      <div class="overlay-area">
        <div class="btn-group" style="position:absolute;bottom:5px;right:5px;">
            <a class="btn btn-default" href="#"><i class="glyphicon glyphicon-download"></i></a>
            <a class="btn btn-default" href="#"><i class="glyphicon glyphicon-star"></i></a>
            <a class="btn btn-default" href="#"><i class="glyphicon glyphicon-heart"></i></a>
        </div>
      </div>
    </div>

## Non image

You can overlay Any content, it does not have to be an image

    <div class="overlay">
      <p>Donec tincidunt, risus id euismod hendrerit, odio nunc rhoncus dolor, a scelerisque lectus metus sit amet lectus. Donec ornare est a quam varius mollis.</p>
        <ul><li>Vivamus euismod</li><li>Cras ac fermentum</li></ul>
      <div class="overlay-area">
        <i class="overlay-icon glyphicon glyphicon-heart"></i>
      </div>
    </div>

*/
.overlay {
  display: inline-block;
  position: relative;
  max-width: 100%;
  vertical-align: middle;
}
.overlay-area {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: #666;
  background: rgba(0, 0, 0, 0.3);
  -webkit-transition: opacity 0.15s linear;
  -o-transition: opacity 0.15s linear;
  transition: opacity 0.15s linear;
  padding: 9px;
  color: #fff;
  color: rgba(255, 255, 255, 0.6);
}
.overlay .overlay-area {
  opacity: 0;
}
.overlay:hover .overlay-area,
.overlay-area.in {
  opacity: 1;
}
.overlay-icon {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -0.5em;
  width: 1.28571429em;
  text-align: center;
  margin-left: -0.64285714em;
  font-size: 4em;
}
/*

An aligned row alternative
==========================
Modifier for the default bootstrap 3 grid that has its contents aligned
this basicaly transforms the normal grid into a "table" with cells
each column has an even height

This code has limitations:
-  all columns must account for 100% of the width (aka 12 columns) no gaps
-  no support for push/pull/offset modifier class support
-  the columns are displayed as table-cells, they thus behave like tables,
 which can cause unwanted behaviour in some cases.


    <div class="row row-aligned">
        <div class="col-BREAKPOINT-COLUMNS col-BREAKPOINT-ALIGNMENT">...</div>
    </div>


Breakpoint:
-  xs = small spartphones
-  sm = tablets
-  md = small desktop
-  lg = large desktop

Columns:
-  1-12 = number of columns

Alignment: (this is the vertical alignment within a column)
-  top
-  middle
-  bottom

## alignment example

    <div class="row row-aligned">
        <div class="col-xs-4 col-xs-top">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis tincidunt lorem et quam ullamcorper lobortis. Praesent in tellus sem. Cras sollicitudin dui id purus scelerisque, eu aliquet massa posuere. Curabitur efficitur ante sit amet arcu feugiat feugiat. Aliquam ultricies ullamcorper scelerisque. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce egestas semper lorem quis vestibulum.</div>
        <div class="col-xs-4 col-xs-middle">Maecenas scelerisque urna in efficitur tincidunt. Vivamus euismod diam condimentum nisi malesuada, nec ornare purus iaculis. Nullam nulla massa, sollicitudin vel orci vitae</div>
        <div class="col-xs-4 col-xs-bottom">Vivamus eros ex, lacinia eu nisi sit amet, aliquet volutpat magna. Donec tincidunt, risus id euismod hendrerit, odio nunc rhoncus dolor</div>
    </div>

## Background color examle

    <div class="row row-aligned">
        <div class="col-xs-4 col-xs-top" style="background:pink">Lorem ipsum dolor sit amet, consectetur adipiscing elit. </div>
        <div class="col-xs-4 col-xs-middle" style="background:beige">Maecenas scelerisque urna in efficitur tincidunt. Vivamus euismod diam condimentum nisi malesuada, nec ornare purus iaculis. Nullam nulla massa, sollicitudin vel orci vitae</div>
        <div class="col-xs-4 col-xs-bottom" style="background:lightBlue">Vivamus eros ex.</div>
    </div>

*/
.row-aligned {
  display: table;
}
.row-aligned > .col-xs-1,
.row-aligned > .col-xs-2,
.row-aligned > .col-xs-3,
.row-aligned > .col-xs-4,
.row-aligned > .col-xs-5,
.row-aligned > .col-xs-6,
.row-aligned > .col-xs-7,
.row-aligned > .col-xs-8,
.row-aligned > .col-xs-9,
.row-aligned > .col-xs-10,
.row-aligned > .col-xs-11,
.row-aligned > .col-xs-12 {
  display: table-cell;
  float: none;
}
.col-xs-top {
  vertical-align: top;
}
.col-xs-middle {
  vertical-align: middle;
}
.col-xs-bottom {
  vertical-align: bottom;
}
@media (min-width: 768px) {
  .row-aligned > .col-sm-1,
  .row-aligned > .col-sm-2,
  .row-aligned > .col-sm-3,
  .row-aligned > .col-sm-4,
  .row-aligned > .col-sm-5,
  .row-aligned > .col-sm-6,
  .row-aligned > .col-sm-7,
  .row-aligned > .col-sm-8,
  .row-aligned > .col-sm-9,
  .row-aligned > .col-sm-10,
  .row-aligned > .col-sm-11,
  .row-aligned > .col-sm-12 {
    display: table-cell;
    float: none;
  }
  .col-sm-top {
    vertical-align: top;
  }
  .col-sm-middle {
    vertical-align: middle;
  }
  .col-sm-bottom {
    vertical-align: bottom;
  }
}
@media (min-width: 992px) {
  .row-aligned > .col-md-1,
  .row-aligned > .col-md-2,
  .row-aligned > .col-md-3,
  .row-aligned > .col-md-4,
  .row-aligned > .col-md-5,
  .row-aligned > .col-md-6,
  .row-aligned > .col-md-7,
  .row-aligned > .col-md-8,
  .row-aligned > .col-md-9,
  .row-aligned > .col-md-10,
  .row-aligned > .col-md-11,
  .row-aligned > .col-md-12 {
    display: table-cell;
    float: none;
  }
  .col-md-top {
    vertical-align: top;
  }
  .col-md-middle {
    vertical-align: middle;
  }
  .col-md-bottom {
    vertical-align: bottom;
  }
}
@media (min-width: 1200px) {
  .row-aligned > .col-lg-1,
  .row-aligned > .col-lg-2,
  .row-aligned > .col-lg-3,
  .row-aligned > .col-lg-4,
  .row-aligned > .col-lg-5,
  .row-aligned > .col-lg-6,
  .row-aligned > .col-lg-7,
  .row-aligned > .col-lg-8,
  .row-aligned > .col-lg-9,
  .row-aligned > .col-lg-10,
  .row-aligned > .col-lg-11,
  .row-aligned > .col-lg-12 {
    display: table-cell;
    float: none;
  }
  .col-lg-top {
    vertical-align: top;
  }
  .col-lg-middle {
    vertical-align: middle;
  }
  .col-lg-bottom {
    vertical-align: bottom;
  }
}
/* 
Ruler arrows
==============

This class allows you to add a ruler with an arrow pointing up/down
or when used in combination with vertical-ruler left/right.

## Down
    <div style="position:relative;height:200px;width:200px;margin:10px;">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
        <hr class="ruler-arrow-down">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
    </div>

## Up
    <div style="position:relative;height:200px;width:200px;margin:10px;">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
        <hr class="ruler-arrow-up">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
    </div>

## left
    <div style="position:relative;height:200px;width:200px;margin:10px;">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
        <hr class="vertical-ruler ruler-arrow-left">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
    </div>

## right
    <div style="position:relative;height:200px;width:200px;margin:10px;">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
        <hr class="vertical-ruler ruler-arrow-right">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
    </div>
*/
.ruler-arrow-right,
.ruler-arrow-left,
.ruler-arrow-down,
.ruler-arrow-up {
  position: relative;
}
.ruler-arrow-right:before,
.ruler-arrow-left:before,
.ruler-arrow-down:before,
.ruler-arrow-up:before,
.ruler-arrow-right:after,
.ruler-arrow-left:after,
.ruler-arrow-down:after,
.ruler-arrow-up:after {
  content: '';
  position: absolute;
  height: 0;
  width: 0;
  display: block;
  transition: bottom .4s ease;
}
.ruler-arrow-right:before,
.ruler-arrow-right:after {
  left: 0;
  top: 50%;
}
.ruler-arrow-right:before {
  margin-top: -15px;
  border-left: 15px solid #eeeeee;
  border-top: 15px solid transparent;
  border-bottom: 15px solid transparent;
}
.ruler-arrow-right:after {
  margin-top: -15px;
  margin-left: -2px;
  border-left: 15px solid #ffffff;
  border-top: 15px solid transparent;
  border-bottom: 15px solid transparent;
}
.ruler-arrow-left:before,
.ruler-arrow-left:after {
  right: 0;
  top: 50%;
}
.ruler-arrow-left:before {
  margin-top: -15px;
  border-right: 15px solid #eeeeee;
  border-top: 15px solid transparent;
  border-bottom: 15px solid transparent;
}
.ruler-arrow-left:after {
  margin-top: -15px;
  margin-right: -2px;
  border-right: 15px solid #ffffff;
  border-top: 15px solid transparent;
  border-bottom: 15px solid transparent;
}
.ruler-arrow-up:before,
.ruler-arrow-up:after {
  left: 50%;
  bottom: 0;
}
.ruler-arrow-up:before {
  margin-left: -15px;
  border-bottom: 15px solid #eeeeee;
  border-left: 15px solid transparent;
  border-right: 15px solid transparent;
}
.ruler-arrow-up:after {
  margin-left: -15px;
  margin-bottom: -2px;
  border-bottom: 15px solid #ffffff;
  border-left: 15px solid transparent;
  border-right: 15px solid transparent;
}
.ruler-arrow-down:before,
.ruler-arrow-down:after {
  left: 50%;
  top: 0;
}
.ruler-arrow-down:before {
  margin-left: -15px;
  border-top: 15px solid #eeeeee;
  border-left: 15px solid transparent;
  border-right: 15px solid transparent;
}
.ruler-arrow-down:after {
  margin-left: -15px;
  margin-top: -2px;
  border-top: 15px solid #ffffff;
  border-left: 15px solid transparent;
  border-right: 15px solid transparent;
}
/* 
Vertical ruler
==============

This class allows you to add a ruler that is displayed vertically

`warning: the parent element must be a position relative.`

limitation: when both a left and right ruler are used in adjacent blocks
         semi transparent (rgba) can give unwanted effects as 2 lines
         are stacked one atop the other.

## to the right
    <div style="position:relative;height:200px;width:200px;margin:10px;">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
        <hr class="vertical-ruler">
    </div>

## to the left
    <div style="position:relative;height:200px;width:200px;margin:10px;">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
        <hr class="vertical-ruler vertical-ruler-left">
    </div>
*/
.vertical-ruler {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  border-right: 1px solid #eeeeee;
  height: 100%;
  margin: 0;
}
.vertical-ruler-left,
.vertical-ruler:first-child {
  right: auto;
  left: -1px;
}
/*
Responsive modal
================

This code simply makes a modal responsive, this relies on the modal-responsive.js file

*/
@media (max-width: 767px) {
  .modal {
    overflow: hidden;
  }
  .modal.fade .modal-dialog {
    -webkit-transform: translate(100%, 0);
    -ms-transform: translate(100%, 0);
    -o-transform: translate(100%, 0);
    transform: translate(100%, 0);
  }
  .modal.in .modal-dialog {
    -webkit-transform: translate(0, 0);
    -ms-transform: translate(0, 0);
    -o-transform: translate(0, 0);
    transform: translate(0, 0);
  }
  .modal-dialog {
    margin: 0 0 0 20px;
    height: 100%;
  }
  .modal-content {
    border-radius: 0;
    height: 100%;
    border: none;
    position: static;
  }
  .modal-body {
    position: relative;
    height: 100%;
    overflow: auto;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
  }
  .modal-footer,
  .modal-header {
    position: absolute;
    width: 100%;
    background-color: #ffffff;
    z-index: 1051;
  }
  .modal-header {
    top: 0;
  }
  .modal-footer {
    bottom: 0;
  }
}
/* 
Base styles
===========

*Inspired on http://semantic-ui.com/views/statistic.html*

## Single item

    <div class="stat">
       <div class="stat-value">123</div>
    </div>

## Label above

    <div class="stat">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12<small>€</small></div>
    </div>

## Label below

    <div class="stat">
        <div class="stat-value">42</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>


## Label above and below

    <div class="stat">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>
*/
.stat {
  display: inline-block;
  margin: 0 .25em;
}
.stat.pull-left {
  margin: 0 2em 1em 0;
}
.stat.pull-right {
  margin: 0 0 1em 2em;
}
a.stat:hover,
a.stat:focus {
  text-decoration: none;
}
.stat-value,
.stat-label {
  text-align: center;
  display: block;
}
.stat-value {
  font-size: 4em;
  line-height: .9em;
  text-transform: uppercase;
}
.stat-value > .glyphicon {
  font-size: .8em;
}
.stat-value > small {
  font-size: 0.5em;
}
.stat-label {
  opacity: 0.8;
}
/*
Horizontal
==========

## Label Right

    <div class="stat stat-horizontal">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12<small>€</small></div>
    </div>

## Label Left

    <div class="stat stat-horizontal">
        <div class="stat-value">42</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>


## Label left and right

    <div class="stat stat-horizontal">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>
*/
.stat-horizontal {
  display: block;
  max-width: 9999px;
  margin: 0;
}
.stat-horizontal > .stat-value,
.stat-horizontal > .stat-label {
  display: inline-block;
  vertical-align: middle;
}
.stat-horizontal > .stat-label {
  margin: 0 .25em;
  text-align: right;
}
.stat-horizontal > .stat-label:first-child {
  margin-left: 0;
}
.stat-horizontal > .stat-label:last-child {
  margin-right: 0;
}
.stat-horizontal > .stat-value ~ .stat-label {
  text-align: left;
}
/*
Sizes
=====

Note: this can be used together with the sizes

## Extra small

    <div class="stat stat-xs">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>

## Small

    <div class="stat stat-sm">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>

## Default

    <div class="stat">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>

## Large

    <div class="stat stat-lg">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>
*/
.stat-xs > .stat-value {
  font-size: 2em;
}
.stat-sm > .stat-value {
  font-size: 3em;
}
.stat-lg > .stat-value {
  font-size: 6em;
}
/*
Contextual color variations
===========================

    <div class="stat stat-primary">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>
    <div class="stat stat-success">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>
    <div class="stat stat-info">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>
    <div class="stat stat-warning">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>
    <div class="stat stat-danger">
        <div class="stat-label">Starting from</div>
        <div class="stat-value">12</div>
        <div class="stat-label">Crazy monkeys</div>
    </div>
*/
.stat-primary > .stat-value {
  color: #337ab7;
}
.stat-success > .stat-value {
  color: #5cb85c;
}
.stat-info > .stat-value {
  color: #5bc0de;
}
.stat-warning > .stat-value {
  color: #f0ad4e;
}
.stat-danger > .stat-value {
  color: #d9534f;
}
/*
Inside a button
===============

    <a class="stat btn btn-default" href="#">
        <span class="stat-value">12</span>
        <span class="stat-label">Crazy monkeys</span>
    </a>
    <a class="stat btn btn-primary" href="#">
        <span class="stat-value">12</span>
        <span class="stat-label">Crazy monkeys</span>
    </a>
    <a class="stat btn btn-success" href="#">
        <span class="stat-value">12</span>
        <span class="stat-label">Crazy monkeys</span>
    </a>
    <a class="stat btn btn-warning" href="#">
        <span class="stat-value">12</span>
        <span class="stat-label">Crazy monkeys</span>
    </a>
    <a class="stat btn btn-danger" href="#">
        <span class="stat-value">12</span>
        <span class="stat-label">Crazy monkeys</span>
    </a>
*/
/*
Date icon
=========

*inspired on http://www.sitepoint.com/create-calendar-icon-html5-css3/*


    <time datetime="2014-12-23" class="date-icon date-icon-default">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>

*/
.date-icon {
  display: inline-block;
  position: relative;
  width: 6em;
  height: 6em;
  background-color: #ffffff;
  border-radius: 0.6em;
  border: 1px solid #eeeeee;
  box-shadow: 0 1px 0 #ffffff, 0 2px 0 #eeeeee, 0 3px 0 #ffffff, 0 4px 0 #eeeeee;
  overflow: hidden;
}
.date-icon > * {
  display: block;
  width: 100%;
  font-size: 1em;
  font-weight: bold;
  font-style: normal;
  text-align: center;
}
.date-icon > strong {
  position: absolute;
  top: 0;
  padding: 0em 0;
  color: #fff;
}
.date-icon > em {
  position: absolute;
  bottom: 0em;
  font-size: .85715em;
}
.date-icon > span {
  font-size: 2.4em;
  letter-spacing: -0.05em;
  padding-top: 0.7em;
}
/*
## different sizes

    <time datetime="2014-12-23" class="date-icon date-icon-default date-icon-xs">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>
    <time datetime="2014-12-23" class="date-icon date-icon-default date-icon-sm">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>
    <time datetime="2014-12-23" class="date-icon date-icon-default">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>
    <time datetime="2014-12-23" class="date-icon date-icon-default date-icon-lg">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>

*/
.date-icon-xs {
  font-size: .6em;
  border-radius: .8em;
}
.date-icon-sm {
  font-size: .75em;
  border-radius: .7em;
}
.date-icon-lg {
  font-size: 1.33334em;
  border-radius: .5em;
}
/*
## Color variations

    <time datetime="2014-12-23" class="date-icon date-icon-default">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>
    <time datetime="2014-12-23" class="date-icon date-icon-primary">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>
    <time datetime="2014-12-23" class="date-icon date-icon-success">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>
    <time datetime="2014-12-23" class="date-icon date-icon-info">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>
    <time datetime="2014-12-23" class="date-icon date-icon-warning">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>
    <time datetime="2014-12-23" class="date-icon date-icon-danger">
        <em>December</em>
        <strong>2014</strong>
        <span>23</span>
    </time>

*/
.date-icon-default > strong {
  background-color: #777777;
  border-bottom: 1px dashed #585858;
  box-shadow: 0 1px 0 #777777;
}
.date-icon-default > em {
  color: #777777;
}
.date-icon-primary > strong {
  background-color: #337ab7;
  border-bottom: 1px dashed #265a88;
  box-shadow: 0 1px 0 #337ab7;
}
.date-icon-primary > em {
  color: #337ab7;
}
.date-icon-success > strong {
  background-color: #5cb85c;
  border-bottom: 1px dashed #419641;
  box-shadow: 0 1px 0 #5cb85c;
}
.date-icon-success > em {
  color: #5cb85c;
}
.date-icon-info > strong {
  background-color: #5bc0de;
  border-bottom: 1px dashed #2aabd2;
  box-shadow: 0 1px 0 #5bc0de;
}
.date-icon-info > em {
  color: #5bc0de;
}
.date-icon-warning > strong {
  background-color: #f0ad4e;
  border-bottom: 1px dashed #eb9316;
  box-shadow: 0 1px 0 #f0ad4e;
}
.date-icon-warning > em {
  color: #f0ad4e;
}
.date-icon-danger > strong {
  background-color: #d9534f;
  border-bottom: 1px dashed #c12e2a;
  box-shadow: 0 1px 0 #d9534f;
}
.date-icon-danger > em {
  color: #d9534f;
}
/*
Styled checkboxes
==================

*inspired on http://codepen.io/CreativeJuiz/pen/BiHzp & http://callmenick.com/2014/05/13/css-toggle-switch-examples/*

`/!\ it is very important to have an empty element after the input field` In the examples an empty `<i></i>` tag is used.

    <div class="checkbox">
      <label class="checkbox-styled">
        <input type="checkbox"> <i></i>
        My checkbox label
      </label>
    </div>
    <div class="checkbox">
      <label class="checkbox-styled">
        <input type="checkbox" checked> <i></i> 
        My checkbox label
      </label>
    </div>

## Disabled checkbox
    <div class="checkbox">
      <label class="checkbox-styled">
        <input type="checkbox" disabled> <i></i> 
        My checkbox label (disabled)
      </label>
    </div>
    <div class="checkbox">
      <label class="checkbox-styled">
        <input type="checkbox" checked disabled> <i></i> 
        My checkbox label (disabled)
      </label>
    </div>

## Larger checkbox

    <div class="checkbox">
        <label class="checkbox-styled checkbox-styled-lg">
            <input type="checkbox"> <i></i>
            Option one is this and that—be sure to include why it's great
        </label>
    </div>
    <div class="checkbox">
        <label class="checkbox-styled checkbox-styled-lg">
            <input type="checkbox" checked> <i></i>
            Option one is this and that—be sure to include why it's great
        </label>
    </div>

## Inline checkbox

    <label class="checkbox-inline checkbox-styled">
      <input type="checkbox" /> <i></i>
      My checkbox label
    </label>
    <label class="checkbox-inline checkbox-styled">
      <input type="checkbox" checked /> <i></i>
      My checkbox label
    </label>

Styled Radio
============
    <div class="checkbox">
      <label class="checkbox-styled">
        <input type="radio" name="test-radio-1"> <i></i>
        My checkbox label
      </label>
    </div>
    <div class="checkbox">
      <label class="checkbox-styled">
        <input type="radio" name="test-radio-1" checked> <i></i> 
        My checkbox label
      </label>
    </div>

*/
/* Base for label styling */
.checkbox-styled {
  padding-left: 20px;
}
.checkbox-styled [type="checkbox"]:not(:checked),
.checkbox-styled [type="checkbox"]:checked,
.checkbox-styled [type="radio"]:not(:checked),
.checkbox-styled [type="radio"]:checked {
  position: absolute;
  left: -9999px;
}
.checkbox-styled [type="checkbox"]:not(:checked) + *,
.checkbox-styled [type="checkbox"]:checked + *,
.checkbox-styled [type="radio"]:not(:checked) + *,
.checkbox-styled [type="radio"]:checked + * {
  position: absolute;
  margin-left: -20px;
  cursor: pointer;
  display: block;
  margin-top: 3px;
  width: 13px;
  height: 13px;
  border: 1px solid #cccccc;
  color: #555555;
  background: #ffffff;
  border-radius: 3px;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  -webkit-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
  -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
  transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.checkbox-styled [type="checkbox"]:not(:checked) + *:after,
.checkbox-styled [type="checkbox"]:checked + *:after,
.checkbox-styled [type="radio"]:not(:checked) + *:after,
.checkbox-styled [type="radio"]:checked + *:after {
  position: absolute;
  top: -5px;
  font-size: 14px;
  width: 100%;
  text-align: center;
  font-style: normal;
  transform: scale(0);
  -webkit-transition: opacity ease-in-out .15s, transform ease-in-out .15s;
  -o-transition: opacity ease-in-out .15s, transform ease-in-out .15s;
  transition: opacity ease-in-out .15s, transform ease-in-out .15s;
  opacity: 0;
}
.checkbox-styled [type="checkbox"]:not(:checked):disabled + *,
.checkbox-styled [type="checkbox"]:checked:disabled + *,
.checkbox-styled [type="radio"]:not(:checked):disabled + *,
.checkbox-styled [type="radio"]:checked:disabled + * {
  box-shadow: none;
  border-color: #cccccc;
  background-color: #eeeeee;
  color: #959595;
  cursor: not-allowed;
}
.checkbox-styled [type="checkbox"]:not(:checked):focus + *,
.checkbox-styled [type="checkbox"]:checked:focus + *,
.checkbox-styled [type="radio"]:not(:checked):focus + *,
.checkbox-styled [type="radio"]:checked:focus + *,
.checkbox-styled [type="checkbox"]:not(:checked):not(:disabled) + *:hover,
.checkbox-styled [type="checkbox"]:checked:not(:disabled) + *:hover,
.checkbox-styled [type="radio"]:not(:checked):not(:disabled) + *:hover,
.checkbox-styled [type="radio"]:checked:not(:disabled) + *:hover {
  border: 1px solid #66afe9;
}
.checkbox-styled [type="checkbox"]:not(:checked) + *:after,
.checkbox-styled [type="checkbox"]:checked + *:after {
  content: '✔';
}
.checkbox-styled [type="radio"]:not(:checked) + *,
.checkbox-styled [type="radio"]:checked + * {
  border-radius: 100%;
}
.checkbox-styled [type="radio"]:not(:checked) + *:after,
.checkbox-styled [type="radio"]:checked + *:after {
  content: '●';
}
.checkbox-styled [type="checkbox"]:checked + *:after,
.checkbox-styled [type="radio"]:checked + *:after {
  transform: scale(1);
  opacity: 1;
}
.checkbox-styled-lg {
  padding-left: 33px;
  line-height: 40px;
}
.checkbox-styled-lg input[type=checkbox] {
  margin-top: 14px;
}
.checkbox-styled-lg [type="checkbox"]:not(:checked) + *,
.checkbox-styled-lg [type="checkbox"]:checked + *,
.checkbox-styled-lg [type="radio"]:not(:checked) + *,
.checkbox-styled-lg [type="radio"]:checked + * {
  margin-left: -33px;
  width: 26px;
  height: 26px;
  margin-top: 7px;
}
.checkbox-styled-lg [type="checkbox"]:not(:checked) + *:after,
.checkbox-styled-lg [type="checkbox"]:checked + *:after,
.checkbox-styled-lg [type="radio"]:not(:checked) + *:after,
.checkbox-styled-lg [type="radio"]:checked + *:after {
  font-size: 30px;
  top: -9px;
}
.radio .checkbox-styled-lg,
.checkbox .checkbox-styled-lg {
  padding-left: 33px;
}
/*
Toggle checkboxes
==================

note: can also be used in the inline style (see above)

    <div class="checkbox">
        <label class="checkbox-styled checkbox-styled-toggle">
            <input type="checkbox"> <i></i>
            Option one is this and that—be sure to include why it's great
        </label>
    </div>
    <div class="checkbox">
        <label class="checkbox-styled checkbox-styled-toggle">
            <input type="checkbox" checked> <i></i>
            Option one is this and that—be sure to include why it's great
        </label>
    </div>

## Disabled toggle
    <div class="checkbox">
        <label class="checkbox-styled checkbox-styled-toggle">
            <input type="checkbox" disabled> <i></i>
            Option one is this and that—be sure to include why it's great
        </label>
    </div>
    <div class="checkbox">
        <label class="checkbox-styled checkbox-styled-toggle">
            <input type="checkbox" checked disabled> <i></i>
            Option one is this and that—be sure to include why it's great
        </label>
    </div>

## Larger toggle

    <div class="checkbox">
        <label class="checkbox-styled checkbox-styled-toggle checkbox-styled-lg">
            <input type="checkbox"> <i></i>
            Option one is this and that—be sure to include why it's great
        </label>
    </div>
    <div class="checkbox">
        <label class="checkbox-styled checkbox-styled-toggle checkbox-styled-lg">
            <input type="checkbox" checked> <i></i>
            Option one is this and that—be sure to include why it's great
        </label>
    </div>

Toggle radios
==================

    <div class="checkbox">
        <label class="checkbox-styled checkbox-styled-toggle">
            <input type="radio" name="radio-test-2"> <i></i>
            Option one is this and that—be sure to include why it's great
        </label>
    </div>
    <div class="checkbox">
        <label class="checkbox-styled checkbox-styled-toggle">
            <input type="radio" name="radio-test-2" checked> <i></i>
            Option one is this and that—be sure to include why it's great
        </label>
    </div>

*/
.checkbox-styled-toggle {
  padding-left: 33px;
  /* sizes */
}
.checkbox-styled-toggle [type="checkbox"]:not(:checked) + *,
.checkbox-styled-toggle [type="checkbox"]:checked + *,
.checkbox-styled-toggle [type="radio"]:not(:checked) + *,
.checkbox-styled-toggle [type="radio"]:checked + * {
  margin-left: -33px;
  padding: 1px;
  width: 26px;
  height: 13px;
  background-color: #cccccc;
  border-radius: 13px;
  border-color: transparent;
}
.checkbox-styled-toggle [type="checkbox"]:not(:checked) + *:before,
.checkbox-styled-toggle [type="checkbox"]:checked + *:before,
.checkbox-styled-toggle [type="radio"]:not(:checked) + *:before,
.checkbox-styled-toggle [type="radio"]:checked + *:before,
.checkbox-styled-toggle [type="checkbox"]:not(:checked) + *:after,
.checkbox-styled-toggle [type="checkbox"]:checked + *:after,
.checkbox-styled-toggle [type="radio"]:not(:checked) + *:after,
.checkbox-styled-toggle [type="radio"]:checked + *:after {
  display: block;
  position: absolute;
  top: 0px;
  left: 0px;
  bottom: 0px;
  content: "";
  opacity: 1;
  transform: scale(1);
}
.checkbox-styled-toggle [type="checkbox"]:not(:checked) + *:before,
.checkbox-styled-toggle [type="checkbox"]:checked + *:before,
.checkbox-styled-toggle [type="radio"]:not(:checked) + *:before,
.checkbox-styled-toggle [type="radio"]:checked + *:before {
  right: 0px;
  background-color: #d9534f;
  border-radius: 13px;
  -webkit-transition: background 0.4s;
  -o-transition: background 0.4s;
  transition: background 0.4s;
}
.checkbox-styled-toggle [type="checkbox"]:not(:checked) + *:after,
.checkbox-styled-toggle [type="checkbox"]:checked + *:after,
.checkbox-styled-toggle [type="radio"]:not(:checked) + *:after,
.checkbox-styled-toggle [type="radio"]:checked + *:after {
  top: 1px;
  left: 1px;
  bottom: 1px;
  width: 9px;
  background-color: #fff;
  border-radius: 100%;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  -webkit-transition: margin 0.4s;
  -o-transition: margin 0.4s;
  transition: margin 0.4s;
}
.checkbox-styled-toggle [type="checkbox"]:not(:checked):disabled + *:before,
.checkbox-styled-toggle [type="checkbox"]:checked:disabled + *:before,
.checkbox-styled-toggle [type="radio"]:not(:checked):disabled + *:before,
.checkbox-styled-toggle [type="radio"]:checked:disabled + *:before {
  background-color: #e0b0ae;
}
.checkbox-styled-toggle [type="checkbox"]:checked + *:before,
.checkbox-styled-toggle [type="radio"]:checked + *:before {
  background-color: #5cb85c;
}
.checkbox-styled-toggle [type="checkbox"]:checked + *:after,
.checkbox-styled-toggle [type="radio"]:checked + *:after {
  margin-left: 13px;
}
.checkbox-styled-toggle [type="checkbox"]:checked:disabled + *:before,
.checkbox-styled-toggle [type="radio"]:checked:disabled + *:before {
  background-color: #b0cab0;
}
.checkbox-styled-toggle.checkbox-styled-lg {
  padding-left: 59px;
}
.checkbox-styled-toggle.checkbox-styled-lg [type="checkbox"]:not(:checked) + *,
.checkbox-styled-toggle.checkbox-styled-lg [type="checkbox"]:checked + *,
.checkbox-styled-toggle.checkbox-styled-lg [type="radio"]:not(:checked) + *,
.checkbox-styled-toggle.checkbox-styled-lg [type="radio"]:checked + * {
  margin-left: -59px;
  width: 52px;
  height: 26px;
  border-radius: 26px;
}
.checkbox-styled-toggle.checkbox-styled-lg [type="checkbox"]:not(:checked) + *:before,
.checkbox-styled-toggle.checkbox-styled-lg [type="checkbox"]:checked + *:before,
.checkbox-styled-toggle.checkbox-styled-lg [type="radio"]:not(:checked) + *:before,
.checkbox-styled-toggle.checkbox-styled-lg [type="radio"]:checked + *:before {
  border-radius: 26px;
}
.checkbox-styled-toggle.checkbox-styled-lg [type="checkbox"]:not(:checked) + *:after,
.checkbox-styled-toggle.checkbox-styled-lg [type="checkbox"]:checked + *:after,
.checkbox-styled-toggle.checkbox-styled-lg [type="radio"]:not(:checked) + *:after,
.checkbox-styled-toggle.checkbox-styled-lg [type="radio"]:checked + *:after {
  width: 22px;
}
.checkbox-styled-toggle.checkbox-styled-lg [type="checkbox"]:checked + *:after,
.checkbox-styled-toggle.checkbox-styled-lg [type="radio"]:checked + *:after {
  margin-left: 26px;
}
.radio .checkbox-styled-toggle,
.checkbox .checkbox-styled-toggle {
  padding-left: 33px;
}
.radio .checkbox-styled-toggle.checkbox-styled-lg,
.checkbox .checkbox-styled-toggle.checkbox-styled-lg {
  padding-left: 59px;
}
/*

See mixins
==========
*/
.stripe-demo {
  overflow-x: hidden;
}
.stripe-demo > .container {
  position: relative;
}
.stripe-demo > .container:before,
.stripe-demo > .container:after {
  top: 0;
  bottom: 0;
  position: absolute;
  content: '';
  display: block;
  width: 480px;
}
.stripe-demo > .container:after {
  left: 100%;
  background: #ffc0cb;
  background-position: top left;
  margin-left: -1px;
}
.stripe-demo > .container:before {
  right: 100%;
  background: #afeeee;
  background-position: top right;
  margin-right: -1px;
}
/*
Spacing-specific utilities
 =========================

Used to adjust the default spacing between components
Use with great care!

`<type>-<breakpoint>-<direction>-<size>`

type:
-  margin
-  padding

Breakpoint:
-  xs = small spartphones
-  sm = tablets
-  md = small desktop
-  lg = large desktop

Direction:
-  a = all
-  t = top
-  r = right
-  b = bottom
-  l = left
-  h = horizontal
-  v = vertical

Size:
-  n = none
-  s = small
-  m = medium
-  l = large
-  xl = extra-large

## margins

    <div class="margin-xs-a-n well">Lorem ipsum dolor...</div>
    <div class="margin-xs-a-s well">Lorem ipsum dolor...</div>
    <div class="margin-xs-a-m well">Lorem ipsum dolor...</div>
    <div class="margin-xs-a-l well">Lorem ipsum dolor...</div>
    <div class="margin-xs-a-xl well">Lorem ipsum dolor...</div>

##paddings

    <div class="padding-xs-a-n well">Lorem ipsum dolor...</div>
    <div class="padding-xs-a-s well">Lorem ipsum dolor...</div>
    <div class="padding-xs-a-m well">Lorem ipsum dolor...</div>
    <div class="padding-xs-a-l well">Lorem ipsum dolor...</div>
    <div class="padding-xs-a-xl well">Lorem ipsum dolor...</div>
*/
/* margins */
.margin-xs-t-n,
.margin-xs-v-n,
.margin-xs-a-n {
  margin-top: 0 !important;
}
.margin-xs-t-s,
.margin-xs-v-s,
.margin-xs-a-s {
  margin-top: 15px !important;
}
.margin-xs-t-m,
.margin-xs-v-m,
.margin-xs-a-m {
  margin-top: 30px !important;
}
.margin-xs-t-l,
.margin-xs-v-l,
.margin-xs-a-l {
  margin-top: 60px !important;
}
.margin-xs-t-xl,
.margin-xs-v-xl,
.margin-xs-a-xl {
  margin-top: 120px !important;
}
.margin-xs-r-n,
.margin-xs-h-n,
.margin-xs-a-n {
  margin-right: 0 !important;
}
.margin-xs-r-s,
.margin-xs-h-s,
.margin-xs-a-s {
  margin-right: 15px !important;
}
.margin-xs-r-m,
.margin-xs-h-m,
.margin-xs-a-m {
  margin-right: 30px !important;
}
.margin-xs-r-l,
.margin-xs-h-l,
.margin-xs-a-l {
  margin-right: 60px !important;
}
.margin-xs-r-xl,
.margin-xs-h-xl,
.margin-xs-a-xl {
  margin-right: 120px !important;
}
.margin-xs-b-n,
.margin-xs-v-n,
.margin-xs-a-n {
  margin-bottom: 0 !important;
}
.margin-xs-b-s,
.margin-xs-v-s,
.margin-xs-a-s {
  margin-bottom: 15px !important;
}
.margin-xs-b-m,
.margin-xs-v-m,
.margin-xs-a-m {
  margin-bottom: 30px !important;
}
.margin-xs-b-l,
.margin-xs-v-l,
.margin-xs-a-l {
  margin-bottom: 60px !important;
}
.margin-xs-b-xl,
.margin-xs-v-xl,
.margin-xs-a-xl {
  margin-bottom: 120px !important;
}
.margin-xs-l-n,
.margin-xs-h-n,
.margin-xs-a-n {
  margin-left: 0 !important;
}
.margin-xs-l-s,
.margin-xs-h-s,
.margin-xs-a-s {
  margin-left: 15px !important;
}
.margin-xs-l-m,
.margin-xs-h-m,
.margin-xs-a-m {
  margin-left: 30px !important;
}
.margin-xs-l-l,
.margin-xs-h-l,
.margin-xs-a-l {
  margin-left: 60px !important;
}
.margin-xs-l-xl,
.margin-xs-h-xl,
.margin-xs-a-xl {
  margin-left: 120px !important;
}
/* paddings */
.padding-xs-t-n,
.padding-xs-v-n,
.padding-xs-a-n {
  padding-top: 0 !important;
}
.padding-xs-t-s,
.padding-xs-v-s,
.padding-xs-a-s {
  padding-top: 15px !important;
}
.padding-xs-t-m,
.padding-xs-v-m,
.padding-xs-a-m {
  padding-top: 30px !important;
}
.padding-xs-t-l,
.padding-xs-v-l,
.padding-xs-a-l {
  padding-top: 60px !important;
}
.padding-xs-t-xl,
.padding-xs-v-xl,
.padding-xs-a-xl {
  padding-top: 120px !important;
}
.padding-xs-r-n,
.padding-xs-h-n,
.padding-xs-a-n {
  padding-right: 0 !important;
}
.padding-xs-r-s,
.padding-xs-h-s,
.padding-xs-a-s {
  padding-right: 15px !important;
}
.padding-xs-r-m,
.padding-xs-h-m,
.padding-xs-a-m {
  padding-right: 30px !important;
}
.padding-xs-r-l,
.padding-xs-h-l,
.padding-xs-a-l {
  padding-right: 60px !important;
}
.padding-xs-r-xl,
.padding-xs-h-xl,
.padding-xs-a-xl {
  padding-right: 120px !important;
}
.padding-xs-b-n,
.padding-xs-v-n,
.padding-xs-a-n {
  padding-bottom: 0 !important;
}
.padding-xs-b-s,
.padding-xs-v-s,
.padding-xs-a-s {
  padding-bottom: 15px !important;
}
.padding-xs-b-m,
.padding-xs-v-m,
.padding-xs-a-m {
  padding-bottom: 30px !important;
}
.padding-xs-b-l,
.padding-xs-v-l,
.padding-xs-a-l {
  padding-bottom: 60px !important;
}
.padding-xs-b-xl,
.padding-xs-v-xl,
.padding-xs-a-xl {
  padding-bottom: 120px !important;
}
.padding-xs-l-n,
.padding-xs-h-n,
.padding-xs-a-n {
  padding-left: 0 !important;
}
.padding-xs-l-s,
.padding-xs-h-s,
.padding-xs-a-s {
  padding-left: 15px !important;
}
.padding-xs-l-m,
.padding-xs-h-m,
.padding-xs-a-m {
  padding-left: 30px !important;
}
.padding-xs-l-l,
.padding-xs-h-l,
.padding-xs-a-l {
  padding-left: 60px !important;
}
.padding-xs-l-xl,
.padding-xs-h-xl,
.padding-xs-a-xl {
  padding-left: 120px !important;
}
@media (min-width: 768px) {
  /* margins */
  .margin-sm-t-n,
  .margin-sm-v-n,
  .margin-sm-a-n {
    margin-top: 0 !important;
  }
  .margin-sm-t-s,
  .margin-sm-v-s,
  .margin-sm-a-s {
    margin-top: 15px !important;
  }
  .margin-sm-t-m,
  .margin-sm-v-m,
  .margin-sm-a-m {
    margin-top: 30px !important;
  }
  .margin-sm-t-l,
  .margin-sm-v-l,
  .margin-sm-a-l {
    margin-top: 60px !important;
  }
  .margin-sm-t-xl,
  .margin-sm-v-xl,
  .margin-sm-a-xl {
    margin-top: 120px !important;
  }
  .margin-sm-r-n,
  .margin-sm-h-n,
  .margin-sm-a-n {
    margin-right: 0 !important;
  }
  .margin-sm-r-s,
  .margin-sm-h-s,
  .margin-sm-a-s {
    margin-right: 15px !important;
  }
  .margin-sm-r-m,
  .margin-sm-h-m,
  .margin-sm-a-m {
    margin-right: 30px !important;
  }
  .margin-sm-r-l,
  .margin-sm-h-l,
  .margin-sm-a-l {
    margin-right: 60px !important;
  }
  .margin-sm-r-xl,
  .margin-sm-h-xl,
  .margin-sm-a-xl {
    margin-right: 120px !important;
  }
  .margin-sm-b-n,
  .margin-sm-v-n,
  .margin-sm-a-n {
    margin-bottom: 0 !important;
  }
  .margin-sm-b-s,
  .margin-sm-v-s,
  .margin-sm-a-s {
    margin-bottom: 15px !important;
  }
  .margin-sm-b-m,
  .margin-sm-v-m,
  .margin-sm-a-m {
    margin-bottom: 30px !important;
  }
  .margin-sm-b-l,
  .margin-sm-v-l,
  .margin-sm-a-l {
    margin-bottom: 60px !important;
  }
  .margin-sm-b-xl,
  .margin-sm-v-xl,
  .margin-sm-a-xl {
    margin-bottom: 120px !important;
  }
  .margin-sm-l-n,
  .margin-sm-h-n,
  .margin-sm-a-n {
    margin-left: 0 !important;
  }
  .margin-sm-l-s,
  .margin-sm-h-s,
  .margin-sm-a-s {
    margin-left: 15px !important;
  }
  .margin-sm-l-m,
  .margin-sm-h-m,
  .margin-sm-a-m {
    margin-left: 30px !important;
  }
  .margin-sm-l-l,
  .margin-sm-h-l,
  .margin-sm-a-l {
    margin-left: 60px !important;
  }
  .margin-sm-l-xl,
  .margin-sm-h-xl,
  .margin-sm-a-xl {
    margin-left: 120px !important;
  }
  /* paddings */
  .padding-sm-t-n,
  .padding-sm-v-n,
  .padding-sm-a-n {
    padding-top: 0 !important;
  }
  .padding-sm-t-s,
  .padding-sm-v-s,
  .padding-sm-a-s {
    padding-top: 15px !important;
  }
  .padding-sm-t-m,
  .padding-sm-v-m,
  .padding-sm-a-m {
    padding-top: 30px !important;
  }
  .padding-sm-t-l,
  .padding-sm-v-l,
  .padding-sm-a-l {
    padding-top: 60px !important;
  }
  .padding-sm-t-xl,
  .padding-sm-v-xl,
  .padding-sm-a-xl {
    padding-top: 120px !important;
  }
  .padding-sm-r-n,
  .padding-sm-h-n,
  .padding-sm-a-n {
    padding-right: 0 !important;
  }
  .padding-sm-r-s,
  .padding-sm-h-s,
  .padding-sm-a-s {
    padding-right: 15px !important;
  }
  .padding-sm-r-m,
  .padding-sm-h-m,
  .padding-sm-a-m {
    padding-right: 30px !important;
  }
  .padding-sm-r-l,
  .padding-sm-h-l,
  .padding-sm-a-l {
    padding-right: 60px !important;
  }
  .padding-sm-r-xl,
  .padding-sm-h-xl,
  .padding-sm-a-xl {
    padding-right: 120px !important;
  }
  .padding-sm-b-n,
  .padding-sm-v-n,
  .padding-sm-a-n {
    padding-bottom: 0 !important;
  }
  .padding-sm-b-s,
  .padding-sm-v-s,
  .padding-sm-a-s {
    padding-bottom: 15px !important;
  }
  .padding-sm-b-m,
  .padding-sm-v-m,
  .padding-sm-a-m {
    padding-bottom: 30px !important;
  }
  .padding-sm-b-l,
  .padding-sm-v-l,
  .padding-sm-a-l {
    padding-bottom: 60px !important;
  }
  .padding-sm-b-xl,
  .padding-sm-v-xl,
  .padding-sm-a-xl {
    padding-bottom: 120px !important;
  }
  .padding-sm-l-n,
  .padding-sm-h-n,
  .padding-sm-a-n {
    padding-left: 0 !important;
  }
  .padding-sm-l-s,
  .padding-sm-h-s,
  .padding-sm-a-s {
    padding-left: 15px !important;
  }
  .padding-sm-l-m,
  .padding-sm-h-m,
  .padding-sm-a-m {
    padding-left: 30px !important;
  }
  .padding-sm-l-l,
  .padding-sm-h-l,
  .padding-sm-a-l {
    padding-left: 60px !important;
  }
  .padding-sm-l-xl,
  .padding-sm-h-xl,
  .padding-sm-a-xl {
    padding-left: 120px !important;
  }
}
@media (min-width: 992px) {
  /* margins */
  .margin-md-t-n,
  .margin-md-v-n,
  .margin-md-a-n {
    margin-top: 0 !important;
  }
  .margin-md-t-s,
  .margin-md-v-s,
  .margin-md-a-s {
    margin-top: 15px !important;
  }
  .margin-md-t-m,
  .margin-md-v-m,
  .margin-md-a-m {
    margin-top: 30px !important;
  }
  .margin-md-t-l,
  .margin-md-v-l,
  .margin-md-a-l {
    margin-top: 60px !important;
  }
  .margin-md-t-xl,
  .margin-md-v-xl,
  .margin-md-a-xl {
    margin-top: 120px !important;
  }
  .margin-md-r-n,
  .margin-md-h-n,
  .margin-md-a-n {
    margin-right: 0 !important;
  }
  .margin-md-r-s,
  .margin-md-h-s,
  .margin-md-a-s {
    margin-right: 15px !important;
  }
  .margin-md-r-m,
  .margin-md-h-m,
  .margin-md-a-m {
    margin-right: 30px !important;
  }
  .margin-md-r-l,
  .margin-md-h-l,
  .margin-md-a-l {
    margin-right: 60px !important;
  }
  .margin-md-r-xl,
  .margin-md-h-xl,
  .margin-md-a-xl {
    margin-right: 120px !important;
  }
  .margin-md-b-n,
  .margin-md-v-n,
  .margin-md-a-n {
    margin-bottom: 0 !important;
  }
  .margin-md-b-s,
  .margin-md-v-s,
  .margin-md-a-s {
    margin-bottom: 15px !important;
  }
  .margin-md-b-m,
  .margin-md-v-m,
  .margin-md-a-m {
    margin-bottom: 30px !important;
  }
  .margin-md-b-l,
  .margin-md-v-l,
  .margin-md-a-l {
    margin-bottom: 60px !important;
  }
  .margin-md-b-xl,
  .margin-md-v-xl,
  .margin-md-a-xl {
    margin-bottom: 120px !important;
  }
  .margin-md-l-n,
  .margin-md-h-n,
  .margin-md-a-n {
    margin-left: 0 !important;
  }
  .margin-md-l-s,
  .margin-md-h-s,
  .margin-md-a-s {
    margin-left: 15px !important;
  }
  .margin-md-l-m,
  .margin-md-h-m,
  .margin-md-a-m {
    margin-left: 30px !important;
  }
  .margin-md-l-l,
  .margin-md-h-l,
  .margin-md-a-l {
    margin-left: 60px !important;
  }
  .margin-md-l-xl,
  .margin-md-h-xl,
  .margin-md-a-xl {
    margin-left: 120px !important;
  }
  /* paddings */
  .padding-md-t-n,
  .padding-md-v-n,
  .padding-md-a-n {
    padding-top: 0 !important;
  }
  .padding-md-t-s,
  .padding-md-v-s,
  .padding-md-a-s {
    padding-top: 15px !important;
  }
  .padding-md-t-m,
  .padding-md-v-m,
  .padding-md-a-m {
    padding-top: 30px !important;
  }
  .padding-md-t-l,
  .padding-md-v-l,
  .padding-md-a-l {
    padding-top: 60px !important;
  }
  .padding-md-t-xl,
  .padding-md-v-xl,
  .padding-md-a-xl {
    padding-top: 120px !important;
  }
  .padding-md-r-n,
  .padding-md-h-n,
  .padding-md-a-n {
    padding-right: 0 !important;
  }
  .padding-md-r-s,
  .padding-md-h-s,
  .padding-md-a-s {
    padding-right: 15px !important;
  }
  .padding-md-r-m,
  .padding-md-h-m,
  .padding-md-a-m {
    padding-right: 30px !important;
  }
  .padding-md-r-l,
  .padding-md-h-l,
  .padding-md-a-l {
    padding-right: 60px !important;
  }
  .padding-md-r-xl,
  .padding-md-h-xl,
  .padding-md-a-xl {
    padding-right: 120px !important;
  }
  .padding-md-b-n,
  .padding-md-v-n,
  .padding-md-a-n {
    padding-bottom: 0 !important;
  }
  .padding-md-b-s,
  .padding-md-v-s,
  .padding-md-a-s {
    padding-bottom: 15px !important;
  }
  .padding-md-b-m,
  .padding-md-v-m,
  .padding-md-a-m {
    padding-bottom: 30px !important;
  }
  .padding-md-b-l,
  .padding-md-v-l,
  .padding-md-a-l {
    padding-bottom: 60px !important;
  }
  .padding-md-b-xl,
  .padding-md-v-xl,
  .padding-md-a-xl {
    padding-bottom: 120px !important;
  }
  .padding-md-l-n,
  .padding-md-h-n,
  .padding-md-a-n {
    padding-left: 0 !important;
  }
  .padding-md-l-s,
  .padding-md-h-s,
  .padding-md-a-s {
    padding-left: 15px !important;
  }
  .padding-md-l-m,
  .padding-md-h-m,
  .padding-md-a-m {
    padding-left: 30px !important;
  }
  .padding-md-l-l,
  .padding-md-h-l,
  .padding-md-a-l {
    padding-left: 60px !important;
  }
  .padding-md-l-xl,
  .padding-md-h-xl,
  .padding-md-a-xl {
    padding-left: 120px !important;
  }
}
@media (min-width: 1200px) {
  /* margins */
  .margin-lg-t-n,
  .margin-lg-v-n,
  .margin-lg-a-n {
    margin-top: 0 !important;
  }
  .margin-lg-t-s,
  .margin-lg-v-s,
  .margin-lg-a-s {
    margin-top: 15px !important;
  }
  .margin-lg-t-m,
  .margin-lg-v-m,
  .margin-lg-a-m {
    margin-top: 30px !important;
  }
  .margin-lg-t-l,
  .margin-lg-v-l,
  .margin-lg-a-l {
    margin-top: 60px !important;
  }
  .margin-lg-t-xl,
  .margin-lg-v-xl,
  .margin-lg-a-xl {
    margin-top: 120px !important;
  }
  .margin-lg-r-n,
  .margin-lg-h-n,
  .margin-lg-a-n {
    margin-right: 0 !important;
  }
  .margin-lg-r-s,
  .margin-lg-h-s,
  .margin-lg-a-s {
    margin-right: 15px !important;
  }
  .margin-lg-r-m,
  .margin-lg-h-m,
  .margin-lg-a-m {
    margin-right: 30px !important;
  }
  .margin-lg-r-l,
  .margin-lg-h-l,
  .margin-lg-a-l {
    margin-right: 60px !important;
  }
  .margin-lg-r-xl,
  .margin-lg-h-xl,
  .margin-lg-a-xl {
    margin-right: 120px !important;
  }
  .margin-lg-b-n,
  .margin-lg-v-n,
  .margin-lg-a-n {
    margin-bottom: 0 !important;
  }
  .margin-lg-b-s,
  .margin-lg-v-s,
  .margin-lg-a-s {
    margin-bottom: 15px !important;
  }
  .margin-lg-b-m,
  .margin-lg-v-m,
  .margin-lg-a-m {
    margin-bottom: 30px !important;
  }
  .margin-lg-b-l,
  .margin-lg-v-l,
  .margin-lg-a-l {
    margin-bottom: 60px !important;
  }
  .margin-lg-b-xl,
  .margin-lg-v-xl,
  .margin-lg-a-xl {
    margin-bottom: 120px !important;
  }
  .margin-lg-l-n,
  .margin-lg-h-n,
  .margin-lg-a-n {
    margin-left: 0 !important;
  }
  .margin-lg-l-s,
  .margin-lg-h-s,
  .margin-lg-a-s {
    margin-left: 15px !important;
  }
  .margin-lg-l-m,
  .margin-lg-h-m,
  .margin-lg-a-m {
    margin-left: 30px !important;
  }
  .margin-lg-l-l,
  .margin-lg-h-l,
  .margin-lg-a-l {
    margin-left: 60px !important;
  }
  .margin-lg-l-xl,
  .margin-lg-h-xl,
  .margin-lg-a-xl {
    margin-left: 120px !important;
  }
  /* paddings */
  .padding-lg-t-n,
  .padding-lg-v-n,
  .padding-lg-a-n {
    padding-top: 0 !important;
  }
  .padding-lg-t-s,
  .padding-lg-v-s,
  .padding-lg-a-s {
    padding-top: 15px !important;
  }
  .padding-lg-t-m,
  .padding-lg-v-m,
  .padding-lg-a-m {
    padding-top: 30px !important;
  }
  .padding-lg-t-l,
  .padding-lg-v-l,
  .padding-lg-a-l {
    padding-top: 60px !important;
  }
  .padding-lg-t-xl,
  .padding-lg-v-xl,
  .padding-lg-a-xl {
    padding-top: 120px !important;
  }
  .padding-lg-r-n,
  .padding-lg-h-n,
  .padding-lg-a-n {
    padding-right: 0 !important;
  }
  .padding-lg-r-s,
  .padding-lg-h-s,
  .padding-lg-a-s {
    padding-right: 15px !important;
  }
  .padding-lg-r-m,
  .padding-lg-h-m,
  .padding-lg-a-m {
    padding-right: 30px !important;
  }
  .padding-lg-r-l,
  .padding-lg-h-l,
  .padding-lg-a-l {
    padding-right: 60px !important;
  }
  .padding-lg-r-xl,
  .padding-lg-h-xl,
  .padding-lg-a-xl {
    padding-right: 120px !important;
  }
  .padding-lg-b-n,
  .padding-lg-v-n,
  .padding-lg-a-n {
    padding-bottom: 0 !important;
  }
  .padding-lg-b-s,
  .padding-lg-v-s,
  .padding-lg-a-s {
    padding-bottom: 15px !important;
  }
  .padding-lg-b-m,
  .padding-lg-v-m,
  .padding-lg-a-m {
    padding-bottom: 30px !important;
  }
  .padding-lg-b-l,
  .padding-lg-v-l,
  .padding-lg-a-l {
    padding-bottom: 60px !important;
  }
  .padding-lg-b-xl,
  .padding-lg-v-xl,
  .padding-lg-a-xl {
    padding-bottom: 120px !important;
  }
  .padding-lg-l-n,
  .padding-lg-h-n,
  .padding-lg-a-n {
    padding-left: 0 !important;
  }
  .padding-lg-l-s,
  .padding-lg-h-s,
  .padding-lg-a-s {
    padding-left: 15px !important;
  }
  .padding-lg-l-m,
  .padding-lg-h-m,
  .padding-lg-a-m {
    padding-left: 30px !important;
  }
  .padding-lg-l-l,
  .padding-lg-h-l,
  .padding-lg-a-l {
    padding-left: 60px !important;
  }
  .padding-lg-l-xl,
  .padding-lg-h-xl,
  .padding-lg-a-xl {
    padding-left: 120px !important;
  }
}
/* 
Responsive version of some BS utilities
 =======================================

## responsive floats
Responsive versions of the .pull-left and .pull-right classes

```css
.pull-xs-right
.pull-sm-right
.pull-md-right
.pull-lg-right
```

## Clear 

a .clear class that simply clears the floats (with responsive version)

```css
.clear
.clear-sm
.clear-md
.clear-lg
```

 */
.pull-xs-right {
  float: right !important;
}
.pull-xs-left {
  float: left !important;
}
.pull-xs-none {
  float: none !important;
}
.clear,
.clear-xs {
  clear: both;
}
@media (min-width: 768px) {
  .pull-sm-right {
    float: right !important;
  }
  .pull-sm-left {
    float: left !important;
  }
  .pull-sm-none {
    float: none !important;
  }
  .clear-sm {
    clear: both;
  }
}
@media (min-width: 992px) {
  .pull-md-right {
    float: right !important;
  }
  .pull-md-left {
    float: left !important;
  }
  .pull-md-none {
    float: none !important;
  }
  .clear-md {
    clear: both;
  }
}
@media (min-width: 1200px) {
  .pull-lg-right {
    float: right !important;
  }
  .pull-lg-left {
    float: left !important;
  }
  .pull-lg-none {
    float: none !important;
  }
  .clear-lg {
    clear: both;
  }
}
/*# sourceMappingURL=Bootstrap-walking-extras.css.map */